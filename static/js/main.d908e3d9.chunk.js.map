{"version":3,"sources":["spreadsheet_io.js","sessions.js","text.js","ui.js","login.js","subject_data.js","randomize.js","stimuli.js","picture_samples.js","audio_controller.js","experiment.js","App.js","reportWebVitals.js","index.js"],"names":["read_url","parse_sheet_list","data","sheetNames","sheets","forEach","sheet","push","properties","title","gs","read","conn","sheetName","range","fetch","spreadsheet_id","api_key","write","Array","isArray","url","write_url","headers","method","mode","body","JSON","stringify","list_sheets","then","res","json","SheetNames","SessionEvent","parseSessions","sessions","values","session_event","session","id","event","time","writeSessionEvent","on_error","request_data","Object","assign","Date","toString","catch","readSessionData","response","does_user_sheet_exists","user_id","includes","text_english","continue_label","subject_id_label","group_label","group_options","introduction","Fragment","subject_data","header","musical_instrument","music_theory","musical_activity","musical_activity_specify","acting","done","validation","gender","gender_male","gender_female","gender_other","age","yes","no","picture_samples","intro","other_pictures","proceed","semantic_field","semantic_field_first","practice_info","trial_instructions","experiment_info","trial_instruction2","trial_confirm","no_confirmation","pause","finish","finish_success","finish_wait","error_no_user_sheet","error_no_connection","error_2nd_session_over","error_no_subject_settings","error_occurred","loading","texts","LoadingScreen","className","ErrorScreen","error","InfoScreen","info","next","continue_disabled","disabled","label","Button","onClick","type","ContinueButton","ComboBox","options","name","defaultValue","value","map","opt","LoginScreen","React","useState","setError","id_input","document","getElementById","group_input","group","SubjectDataScreen","validation_error","error_div","checked","activity","activity_yes","activity_no","activity_specify","acting_yes","acting_no","randomElement","arr","min","max","length","Math","floor","random","shuffleArray","a","sort","b","counterbalance","n","prev_vals","counts","fill","v","min_idxs","min_count","i","find_first_idx","k","n_partial_fact","Medium","Music","Speech","Language","English","Hebrew","UnitSize","Single","Multiple","NovelWord","Bulo","Tepi","PictureOrientation","Right","Left","Meaning","High","Low","Ascending","Descending","Large","Small","Growing","Shrinking","Near","Far","Approaching","Receding","MeaningName","SemanticField","semantic_field_meanings","Height","Size","Distance","semantic_field_for_meaning","meaning","indexOf","contrast_meanings","serial_meanings","audio_visual_pairings","visual_stim_size","audio_stimulus_url","medium","language","participant","unit_size","novel_word","picture_variant","picture_orientation","visual_stimulus_url","block_name","m","l","u","pilot_blocks","blocks","unit","exp1_picture_orientation","exp1_recordings","word","filtered_recs","filter","r","parseInt","undefined","PictureSamplesScreen","semantic_fields_permutation","setIntro","semanticFieldIdx","setSemanticFieldIdx","ls_prefix","useEffect","cont_field","ls","get","set","contrast_src","contrast_img","src","alt","width","height","serial_src","serial_img","perm_seq","seq","s","Set","add","itr","from","ffi","idx","splice","perm_to_seq","meanings","console","log","imgs","instructions","AudioController","srcs","onDoneLoading","onAudioEnded","this","players","ids2players","players2ids","playerIdx","p","Audio","addEventListener","e","audioLoaded","onerror","code","loadCount","player","audio_id","play","err","currentTime","TrialUI","disable_play","disable_pictures","pictures","visual1_location","ordered_imgs","ExperimentBlock","props","state","trial_idx","play_count","startTrial","is_practice","trial_date","trial_time","getTime","trials","trial","setState","endTrial","was_correct","stimuli","block_stimuli","block","block_idx","trial_duration","is_correct","nextTrial","playTrial","audio","audio_controller","set_is_playing","cont_trial_idx","continued_trial","is_playing","Component","Experiment","steps","PRACTICE_INFO","PRACTICE_TRIALS","EXPERIMENT_INFO","EXPERIMENT_BLOCK1","PAUSE1","EXPERIMENT_BLOCK2","PAUSE2","EXPERIMENT_BLOCK3","PAUSE3","EXPERIMENT_BLOCK4","step","is_loading","nextStep","new_step","cont_block_stimuli","practice_stimuli","cont_step","stims","pairing","exp1_subject","non_word","picture_set","correct_meaning","compared_meaning","flat","first_block_idx","session_block_stimuli","slice","audio_urls","FinishScreen","done_saving","data_save_error","App","LOGIN","SUBJECT_DATA","INTRO","PICTURE_SAMPLES","EXPERIMENT_BLOCKS","FINISH","setStep","stepWillChange","prev_step","next_step","handle_login","altered_step","stepChanged","save_data","check_for_subject_sheet","sheet_exists","load_exp1_recordings","exp1_data","found_sheet","previous_sessions","start_new_session","last_session","last_session_number","continue_session","number","start_session","clear","generate_subject_settings","load_subject_settings","cont_data","subjects_sheet","prev_settings","prev_group_settings","prev_picture_samples","picture_samples_order","prev_left_picture","left_picture","exp1_subjects","subject_Mu_E","subject_Mu_H","subject_Sp_E","subject_Sp_H","prev_subject_Mu_E","prev_subject_Mu_H","prev_subject_Sp_E","prev_subject_Sp_H","subject_row","rows","row","settings_row","parse","end_time","t","start_time","that","show_data_save_error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d908e3d9.chunk.js","sourcesContent":["/* functions for reading and writing to a google spreadsheet.\n   \n */\n\nconst read_url = \"https://sheets.googleapis.com/v4/spreadsheets/\";\n\n// https://stackoverflow.com/questions/1714786/query-string-encoding-of-a-javascript-object\nexport const serialize = function(obj, prefix) {\n  var str = [],\n    p;\n  for (p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      var k = prefix ? prefix + \"[\" + p + \"]\" : p,\n        v = obj[p];\n      str.push((v !== null && typeof v === \"object\") ?\n        serialize(v, k) :\n        encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n    }\n  }\n  console.log(\"serialize: \" + str.join(\"&\"));\n  return str.join(\"&\");\n}\n\nconst parse_sheet_list = (data) => {\n  let sheetNames = [];\n  data.sheets.forEach(sheet => {\n    sheetNames.push(sheet.properties.title);\n  });\n  return sheetNames;\n};\n\nconst gs = {\n  read: function(conn, sheetName, range) {\n    return fetch(read_url + \n                 conn.spreadsheet_id + \n                 \"/values/\" + \n                 sheetName + \n                 \"!\" + range + \n                 \"?key=\" + conn.api_key);\n  },\n\n  write: function(conn, sheetName, data) {\n    if (!Array.isArray(data))\n        data = [data];\n    let url = conn.write_url + \"?sheet_name=\" + sheetName;\n    return fetch(url,\n                 {\n                   headers: {\n                     'Accept': 'application/json',\n                     'Content-Type': 'application/json'\n                   },\n                   method: \"POST\",\n                   mode: 'no-cors',\n                   body: JSON.stringify(data),\n                 });\n  },\n\n  list_sheets: function(conn) {\n    return fetch(read_url + conn.spreadsheet_id + \"?key=\" + conn.api_key)\n      .then(res => res.json())\n      .then(parse_sheet_list);\n  },\n};\n\nexport default gs;\n","import gs from './spreadsheet_io.js';\n\nconst SheetNames = {\n    SESSIONS: \"Sessions\",\n    SUBJECTS: \"Subjects\",\n};\n\nexport const SessionEvent = {\n    SESSION_START: \"SESSION_START\",\n    SESSION_CONTINUED: \"SESSION_CONTINUED\",\n    SESSION_END: \"SESSION_END\",\n};\n\n// parse session json data from sheets api into an array of session objects.\nexport const parseSessions = (data) => {\n    let sessions = [];\n    data.values.forEach(session_event => {\n\tlet session = {\n\t    id: session_event[0],\n\t    session: session_event[1],\n\t    event: session_event[2],\n\t    time: session_event[3],\n\t};\n\tsessions.push(session);\n    });\n    return sessions;\n};\n\nexport const writeSessionEvent = (conn, session, event, on_error) => {\n    let request_data = Object.assign({event: event,\n                                      time: new Date().toString()},\n                                     session);\n    gs.write(conn, SheetNames.SESSIONS, request_data)\n\t.catch(on_error);\n    \n};\n\nexport const readSessionData = (conn) => {\n    return gs.read(conn, SheetNames.SESSIONS, \"A2:E10000\")\n\t.then(response => response.json())\n\t.then(parseSessions);\n    \n};\n\nexport const does_user_sheet_exists = (conn, user_id) => {\n    return gs.list_sheets(conn)\n\t.then(sheets => sheets.includes(user_id));\n};\n\nexport const read_subject_data = (conn, subject_id) => {\n    return gs.read(conn, SheetNames.SUBJECTS, \"A2:C10000\")\n\t.then(response => response.json())\n\t.then(data => {\n\t    for (const row of data.values) {\n\t\tif (row.length !== 3)\n\t\t    continue;\n\t\t\n        if (row[0] === subject_id) {\n            const subject_data = {\n\t\tid: row[0],\n            };\n            return subject_data;\n        }\n\t    }\n\t    return null;\n\t});\n};\n","import React from 'react';\n\nexport const text_english = {\n    continue_label: \"Proceed\",\n    \n    subject_id_label: \"Participant number:\",\n\n    group_label: \"Group:\",\n\n    group_options: [\n        \"Israeli musician\",\n        \"Israeli non-musician\",\n        \"American musician\",\n        \"American non-musician\",\n    ],\n    \n    introduction:\n    <React.Fragment>\n      <p>\n        This experiment has a single task, repeated many times. In each trial, you will see two pictures and hear a voice, singing or speaking. Your task is to select the picture that better matches, according to your subjective intuition or \"feeling,\" what the voice seems to express.\n      </p>\n      <p>\n        The experiment begins with a short practice session, followed by 4 \"blocks\" of trials. There will be pauses between blocks. The duration of each pause is self-timed. Four additional blocks will be presented in the 2nd session of the experiment, to be conducted in about a week.\n      </p>\n      <p>\n        The duration of each session is approximately 1 hour.\n      </p>\n      <p>\n        Press \"proceed\" to continue.\n      </p>\n    </React.Fragment>,\n\n    subject_data: {\n        header:\n        <p>Thank you for your participation in this experiment. Please provide the following information:</p>,\n\n        musical_instrument:\n        <p>\n          Have you studied a musical instrument formally (including vocal training)? If you have, please specity for how many years. If you have not, choose \"0\".\n        </p>,\n\n        music_theory:\n        <p>\n          Have you studied music theory formally? If you have, please specify for how many years. If you have not, choose \"0\".\n        </p>,\n\n        musical_activity:\n        <p>\n          Are you currently involved in any musical activity (excluding passive listening) professionaly or as a serious hobby? \n        </p>,\n\n        musical_activity_specify:\n        <p>\n          If you are, please specify\n        </p>,\n\n        acting:\n        <p>\n          Have you been involved in acting (professionally or as a serious hobby)?\n        </p>,\n\n        done:\n        <p>\n          When done, please press \"proceed\"\n        </p>,\n\n        validation: \"Please complete all cells before pressing proceed\",\n        gender: \"Gender\",\n        gender_male: \"Male\",\n        gender_female: \"Female\",\n        gender_other: \"Other\",\n        age: \"Age\",\n        yes: \"Yes\",\n        no: \"No\",\n    },\n\n    picture_samples: {\n            \n        intro:\n        <React.Fragment>\n          <p>\n            Let's have a look at the pictures used in the experiment.\n          </p>\n          <p>\n            In some pictures you see 2 objects contrasting in a particular feature. An arrow points at one of the objects. This is the object the picture referes to. The other object is presented for comparison. For instance:\n          </p>\n        </React.Fragment>,\n        \n        other_pictures:\n        <p>\n          Other pictures are comprised of a series of drawings, depicting a process or action. The arrows in these series denote the temporal order of the drawings.\n        </p>,\n        \n        proceed:\n        <p>\n          Press \"proceed\" when ready to continue.\n        </p>,\n\n        semantic_field:\n        <p>\n          Here are additional 4 pictures used in the experiment. Please note these pictures and their relationships. Press \"proceed\" when ready to continue.\n        </p>,\n\n        semantic_field_first:\n        <p>\n          Here are 4 pictures to be used in the experiment. Please note these pictures and their relationships. Press \"proceed\" when ready to continue.\n        </p>\n\n    },\n\n    practice_info:\n    <React.Fragment>\n      <p>\n        In the following practice trials, you will see two pictures and hear a voice, singing or speaking. Your task is to select the picture that better matches, according to your subjective intuition or \"feeling,\" what the voice seems to express.\n      </p>\n      <p>Please press \"proceed\" to begin the practice trials.</p>\n    </React.Fragment>,\n\n    trial_instructions:\n    <p>\n      Please click the sound icon and listen to the voice recording. After listening to the entire recording, click the picture that better matches the meaning that the voice seems to express, according to your intuition or \"feeling.\" If you are unsure, you may listen again, by re-clicking the sound icon. Once you click one of the pictures, you will move to the next screen.\n    </p>,\n\n    experiment_info:\n    <React.Fragment>\n      <p>We now begin the experiment</p>\n      <p>\n        The experiment trials are identical to the practice trials you have just completed. In each trial, you will see two pictures with a sound icon below them. Click the sound icon and listen to the voice recording. After listening to the entire recording, click the picture that better matches the meaning that the voice seems to express, according to your intuition or \"feeling.\" If you are unsure, you may listen again, by re-clicking the sound icon. Once you click one of the pictures, you will move to the next screen.\n      </p>\n      <p>\n        If you have any questions regarding the procedure, please contact the experimenter now. If everything is clear, press \"proceed\" and the experiment will immediately begin.\n      </p>\n    </React.Fragment>,\n    \n    trial_instruction2:\n    <React.Fragment>\n      <p>\n        Please click the picture that better matches the meaning that the voice seems to express. You may listen to the voice again, by clicking its icon.\n      </p>\n    </React.Fragment>,\n    \n    trial_confirm:\n    <React.Fragment>\n      <p>\n        Are you sure? Click <em>yes</em> or <em>no</em>.\n      </p>\n    </React.Fragment>,\n        \n    no_confirmation:\n    <React.Fragment>\n      <p>\n        Please try again.\n      </p>\n    </React.Fragment>,\n\n    pause:\n    <p>You may now take a short break. When you want to proceed, press the \"proceed\" box below.</p>,\n   \n    finish:\n    <React.Fragment>\n      <p>Thank you! You have completed this session.</p>\n      <p>Please contact the experimenter to ensure your data is uploaded and schedule the next session.</p>\n    </React.Fragment>,\n    \n    finish_success: \"Done uploading data!\",\n    finish_wait: \"Please wait while uploading data...\",\n    error_no_user_sheet: \"Can't find a data sheet for participant id \",\n    error_no_connection: \"Can't connect. Please check your internet connection and try again.\",\n    error_2nd_session_over: \"A participant with this participant id has already completed the experiment.\",\n    error_no_subject_settings:\" Can't find previous settings for participant id \",\n    error_occurred: \"An error has occurred\",\n    loading: \"Loading...\",\n};\n","import React from 'react';\nimport { text_english } from './text.js';\n\nconst texts = text_english;\n\nexport const openFullscreen = () => {\n  const elem = document.documentElement;\n  if (elem.requestFullscreen) {\n    elem.requestFullscreen();\n  } else if (elem.mozRequestFullScreen) { /* Firefox */\n    elem.mozRequestFullScreen();\n  } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n    elem.webkitRequestFullscreen();\n  } else if (elem.msRequestFullscreen) { /* IE/Edge */\n    elem.msRequestFullscreen();\n  }\n};\n\nexport const LoadingScreen = () => {\n    return <div className=\"containter text-center\"><p className=\"lead\">{texts.loading}</p></div>;\n};\n\nexport const ErrorScreen = ({error}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <p>{texts.error_occurred}:</p>\n          <p className=\"lead center\">{error}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const InfoScreen = ({info, next, continue_disabled, continue_label}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2 infotext\">\n          {info}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col text-center\">\n          <br/>\n            <ContinueButton next={next} disabled={continue_disabled} label={continue_label}/>\n        </div>\n        <div className=\"col\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport const Button = ({label, onClick, disabled}) => {\n  return disabled ? \n    <button type=\"button\" className=\"btn btn-primary\" onClick={onClick} disabled>{label}</button> :\n    <button type=\"button\" className=\"btn btn-primary\" onClick={onClick}>{label}</button>;\n};\n\nexport const ContinueButton = ({next, label, disabled}) => {\n  return <Button label={label || \"המשך\"} onClick={next} disabled={disabled}/>;\n};\n\n/* 4 buttons in a square layout with fixation point in the middle. Each button is assigned a value to be passed to \n   the next function when it's clicked. */\nexport const ButtonTable = ({labels, values, disabled, next}) => {\n  const gen_button = (btn_idx) => {\n    if (disabled) \n      return <button className=\"chordBtn\" disabled onClick={(e) => next(values[btn_idx])}>{labels[btn_idx]}</button>;\n    else \n      return <button className=\"chordBtn\" onClick={(e) => next(values[btn_idx])}>{labels[btn_idx]}</button>;\n  };\n\n  return (\n    <table className=\"chordSelection\">\n      <tbody>\n        <tr>\n          <td>{gen_button(0)}</td>\n          <td></td>\n          <td>{gen_button(1)}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td className=\"plusSign align-middle\">+</td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>{gen_button(2)}</td>\n          <td></td>\n          <td>{gen_button(3)}</td>\n        </tr>\n      </tbody>\n    </table>   \n  );\n};\n\nexport const ComboBox = ({id, options, disabled}) => {\n  if (disabled) {\n    return (\n      <select id={id} name={id} defaultValue=\"\" disabled>\n        <option disabled value=\"\"></option>\n        {options.map(opt => <option value={opt} key={opt}>{opt}</option>)}\n      </select>\n    );\n  }\n  else {\n    return (\n      <select id={id} name={id} defaultValue=\"\">\n        <option disabled value=\"\"></option>\n        {options.map(opt => <option value={opt} key={opt}>{opt}</option>)}\n      </select>\n    );\n  }\n};\n","import React from 'react';\nimport { text_english } from './text.js';\nimport { ContinueButton, ComboBox } from './ui.js';\n\nconst texts = text_english;\n\nexport const LoginScreen = ({next, data}) => {\n    const [error, setError] = React.useState(null);\n    \n    const handleContinue = () => {\n        const id_input = document.getElementById('id_input');\n        const group_input = document.getElementById('group_input');\n        \n        if (id_input.value === \"\" || group_input.value === \"\") {\n            setError(\"Please select group and participant number.\");\n            return;\n        }\n        \n        data.id = id_input.value;\n        data.group = group_input.value;\n        next();\n    };\n    \n    return (\n        <div className=\"container\">\n          <div className=\"row breathing-top\">\n            <div className=\"col-4 offset-4\">\n              <table>\n                <tbody>\n                  <tr>\n                    <th>{text_english.subject_id_label}</th>\n                    <td><input type=\"text\" id=\"id_input\"/></td>\n                  </tr>\n                  <tr>\n                    <th>{text_english.group_label}</th>\n                    <td><ComboBox id=\"group_input\" options={texts.group_options}/></td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col text-center breathing-top\">\n              <ContinueButton next={handleContinue} label={texts.continue_label}/>\n              <div className=\"error\">\n                {error}\n              </div>              \n            </div>\n          </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { text_english } from './text.js';\nimport { ContinueButton } from './ui.js';\n\nconst texts = text_english;\n\nexport const SubjectDataScreen = ({next, data}) => {\n    const [error, setError] = React.useState(null);\n    const validation_error = () => setError(texts.subject_data.validation);\n    \n    const saveData = () => {\n        const gender_male = document.getElementById('male');\n        const gender_female = document.getElementById('female');\n        const gender_other = document.getElementById('other');\n        let gender;\n        if (gender_male.checked) {\n            gender = gender_male.value;\n        }\n        else if (gender_female.checked) {\n            gender = gender_female.value;\n        }\n        else if (gender_other.checked) {\n            gender = gender_other.value;\n        }\n        else {\n            validation_error();\n            return;\n        }\n\n        const age = document.getElementById('age_input').value;\n        const musical_instrument = document.getElementById('instrument_input').value;\n        const music_theory = document.getElementById('theory_input').value;\n\n        if (age === \"\" || musical_instrument === \"\" || music_theory === \"\") {\n            validation_error();\n            return;\n        }\n\n        const activity_yes = document.getElementById('activity_yes');\n        const activity_no = document.getElementById('activity_no');\n        let activity;\n        if (activity_yes.checked) {\n            activity = activity_yes.value;\n        }\n        else if (activity_no.checked) {\n            activity = activity_no.value;\n        }\n        else {\n            validation_error();\n            return;\n        }\n        \n        const activity_specify = document.getElementById('activity_specify_input').value;\n        if (activity_specify === \"\" && activity_yes.checked) {\n            validation_error();\n            return;\n        }\n        \n        const acting_yes = document.getElementById('acting_yes');\n        const acting_no = document.getElementById('acting_no');\n        let acting;\n        if (acting_yes.checked) {\n            acting = acting_yes.value;\n        }\n        else if (acting_no.checked) {\n            acting = acting_no.value;\n        }\n        else {\n            validation_error();\n            return;\n        }\n\n        data.gender = gender;\n        data.age = age;\n        data.musical_instrument = musical_instrument;\n        data.music_theory = music_theory;\n        data.activity = activity;\n        data.activity_specify = activity_specify;\n        data.acting = acting;\n        \n\tnext();\n    };\n\n    const error_div = error ? (\n\t<div className=\"error\">\n          {error}\n\t</div>\n    ) : null;\n\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 offset-md-2 breathing-top\">\n\t\t{texts.subject_data.header}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8 offset-md-2\">\n              <table>\n                <tbody>\n                  <tr>\n                    <th>{texts.subject_data.gender}</th>\n                    <td>\n                      <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"/>\n                      <label>{texts.subject_data.gender_male}</label>\n                      <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"/>\n                      <label>{texts.subject_data.gender_female}</label>\n                      <input type=\"radio\" id=\"other\" name=\"gender\" value=\"other\"/>\n                      <label>{texts.subject_data.gender_other}</label>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th>{texts.subject_data.age}</th>\n                    <td><input type=\"text\" id=\"age_input\"/></td>\n                  </tr>\n                  <tr>\n                    <th>{texts.subject_data.musical_instrument}</th>\n                  <td><input type=\"text\" id=\"instrument_input\"/></td>\n                  </tr>\n                  <tr>\n                    <th>{texts.subject_data.music_theory}</th>\n                    <td><input type=\"text\" id=\"theory_input\"/></td>\n                  </tr>\n                  <tr>\n                    <th>{texts.subject_data.musical_activity}</th>\n                    <td>\n                      <input type=\"radio\" id=\"activity_yes\" name=\"activity\" value=\"yes\"/>\n                      <label>{texts.subject_data.yes}</label>\n                      <input type=\"radio\" id=\"activity_no\" name=\"activity\" value=\"no\"/>\n                      <label>{texts.subject_data.no}</label>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th>{texts.subject_data.musical_activity_specify}</th>\n                    <td><input type=\"text\" id=\"activity_specify_input\"/></td>\n                  </tr>\n                  <tr>\n                    <th>{texts.subject_data.acting}</th>\n                    <td>\n                      <input type=\"radio\" id=\"acting_yes\" name=\"acting\" value=\"yes\"/>\n                      <label>{texts.subject_data.yes}</label>\n                      <input type=\"radio\" id=\"acting_no\" name=\"acting\" value=\"no\"/>\n                      <label>{texts.subject_data.no}</label>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col text-center font-weight-bold\">\n              <br/>\n              {texts.subject_data.done}\n              <ContinueButton label={texts.continue_label} next={saveData}/>\n              {error_div}\n            </div>\n          </div>\n        </div>\n                 \n                 \n                 \n    );\n};\n","export function repeatArray(arr, count) {     \n  var ln = arr.length;\n  var b = [];\n  for(let i=0; i<count; i++) {      \n    b.push(arr[i%ln]);      \n  }\n      \n  return b;      \n}\n\n/* random int between min and max inclusive. */\nexport const randomInt = (min, max) => \n  Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const randomElement = arr => arr[randomInt(0, arr.length-1)];\n\nexport const shuffleArray = arr => arr\n  .map(a => [Math.random(), a])\n  .sort((a, b) => a[0] - b[0])\n  .map(a => a[1]);\n\nexport const randomSequence = (items, length) => shuffleArray(repeatArray(items, length));\n\nexport const counterbalance = (n, prev_vals) => {\n    const counts = Array(n).fill(0);\n    for (const v of prev_vals) {\n        if (counts[v]) {\n            counts[v] += 1;\n        }\n        else {\n            counts[v] = 1;\n        }\n    }\n\n    let min_idxs = [];\n    let min_count = null;\n    \n    for (let i=0; i<n; i++) {\n        if (min_count === null || counts[i] < min_count) {\n            min_count = counts[i];\n            min_idxs = [i];\n        }\n\telse if (counts[i] === min_count) {\n\t    min_idxs.push(i);\n\t}\n    }\n \n    return randomElement(min_idxs);\n};\n\nconst find_first_idx = (k, n) => {\n    if (n === 1)\n        return {i: 0, k: k};\n\n    n -= 1;\n    \n    let first_idx = 0;\n    let n_partial_fact = n;\n\n    while (k >= n_partial_fact && n > 1) {\n        n_partial_fact = n_partial_fact * (n - 1);\n        n -= 1;\n    }\n\n    first_idx = Math.floor(k / n_partial_fact);\n    k = k % n_partial_fact;\n    return {i: first_idx, k: k};\n};\n\nexport const perm_to_seq = (n, k) => {\n    const seq = [];\n    let s = new Set();\n\n    for (let i=0; i<n; i++)\n        s.add(i);\n    \n    for (let i=0; i<n; i++) {\n        const itr = Array.from(s);\n        const ffi = find_first_idx(k, n-i);\n        const idx = ffi.i;\n        k = ffi.k;\n        \n        seq.push(itr[idx]);\n        itr.splice(idx, 1);\n        s = new Set(itr);\n    }\n\n    return seq;\n};\n","import { shuffleArray } from './randomize.js';\n\nexport const Medium = {\n    Music: \"Mu\",\n    Speech: \"Sp\",\n};\n\nexport const Language = {\n    English: \"E\",\n    Hebrew: \"H\",\n};\n\nexport const UnitSize = {\n    Single: \"Sn\",\n    Multiple: \"Ml\",\n};\n\nexport const NovelWord = {\n    Bulo: \"B\",\n    Tepi: \"T\",\n};\n\nexport const PictureOrientation = {\n    Right: \"R\",\n    Left: \"L\",\n};\n\nexport const Meaning = {\n    High: 1,\n    Low: 2,\n    Ascending: 3,\n    Descending: 4,\n    Large: 5,\n    Small: 6,\n    Growing: 7,\n    Shrinking: 8,\n    Near: 9,\n    Far: 10,\n    Approaching: 11,\n    Receding: 12,\n};\n\nexport const MeaningName = [\n    null, \"High\", \"Low\", \"Ascending\", \"Descending\", \"Large\", \"Small\",\n    \"Growing\", \"Shrinking\", \"Near\", \"Far\", \"Approaching\", \"Receding\",\n];\n\nexport const SemanticField = [\"Height\", \"Size\", \"Distance\"];\n\nexport const semantic_field_meanings = {\n    Height: [1, 2, 3, 4],\n    Size: [5, 6, 7, 8],\n    Distance: [9, 10, 11, 12],\n};\n\nexport const semantic_field_for_meaning = (meaning) => {\n    return SemanticField[Math.floor((MeaningName.indexOf(meaning) - 1) / 4)];\n};\n\nexport const contrast_meanings = [\"High\", \"Low\", \"Far\", \"Near\", \"Large\", \"Small\"];\nexport const serial_meanings = [\"Ascending\", \"Descending\", \"Approaching\", \"Receding\", \"Growing\", \"Shrinking\"];\n\n// Mapping between audio meaning and possible wrong answer picture meanings.\nexport const audio_visual_pairings = {\n    High: [\"Low\", \"Ascending\"],\n    Low: [\"High\", \"Descending\"],\n    Ascending: [\"Descending\", \"High\"],\n    Descending: [\"Ascending\", \"Low\"],\n    Large: [\"Small\", \"Growing\"],\n    Small: [\"Large\", \"Shrinking\"],\n    Growing: [\"Shrinking\", \"Large\"],\n    Shrinking: [\"Growing\", \"Small\"],\n    Near: [\"Far\", \"Approaching\"],\n    Far: [\"Near\", \"Receding\"],\n    Approaching: [\"Receding\", \"Near\"],\n    Receding: [\"Approaching\", \"Far\"],\n};\n\nexport const audio_ext = \".mp3\";\nexport const image_ext = \".jpg\";\n\nconst audio_stim_dir = \"exp2021/stimuli/audio/\";\nconst visual_stim_dir = \"exp2021/stimuli/images/\";\n\nexport const visual_stim_size = [480, 270];\n\nexport const audio_stimulus_url = (medium,\n                                   language,\n                                   participant,\n                                   unit_size,\n                                   novel_word,\n                                   picture_variant,\n                                   picture_orientation,\n                                   meaning) =>\n{\n    return audio_stim_dir + Medium[medium] + \"_\" +\n        Language[language] + \"_\" +\n        participant + \"_\" +\n        UnitSize[unit_size] + \"_\" +\n        NovelWord[novel_word] + \"_\" +\n        picture_variant + \"_\" +\n        PictureOrientation[picture_orientation] + \"_\" +\n        Meaning[meaning] +\n        audio_ext;\n};\n\nexport const visual_stimulus_url = (meaning,\n                                    picture_variant,\n                                    picture_orientation) =>\n{\n    return visual_stim_dir + MeaningName[Meaning[meaning]] +\n        picture_variant +\n        PictureOrientation[picture_orientation] +\n        image_ext;\n};\n\nexport const block_name = (m, l, u) => {\n    if (m === 'Music') {\n\tif (l === 'English') {\n\t    if (u === 'Single') return 'A';\t  \n\t    else return 'B';\n\t}\n\telse {\n\t    if (u === 'Single') return 'C';\n\t    else return 'D';\n\t}\n    } else {\n\tif (l === 'English') {\n\t    if (u === 'Single') return 'E';\n\t    else return 'F';\n\t}\n\telse {\n\t    if (u === 'Single') return 'G';\n\t    else return 'H';\n\t}\n    }\n};\n\nexport const blocks = (data) => {\n    let blocks = [];\n    for (let medium in Medium)\n        for (let lang in Language) {\n            const participant = data[`subject_${Medium[medium]}_${Language[lang]}`];\n\n            for (let unit in UnitSize) {\n                blocks.push({\n                    medium: medium,\n                    language: lang,\n                    unit_size: unit,\n\t\t            participant: participant,\n\t\t            name: block_name(medium, lang, unit),\n                });\n            }\n        }\n    return shuffleArray(blocks);\n};\n\nexport const pilot_blocks = (data) => {\n    let blocks = [];\n    for (let unit in UnitSize) {\n        blocks.push({\n            medium: 'Music',\n            language: 'Hebrew',\n            unit_size: unit,\n            participant: 2,\n            name: block_name('Music', 'Hebrew', unit),\n        });\n    }\n\n    for (let unit in UnitSize) {\n        blocks.push({\n            medium: 'Speech',\n            language: 'Hebrew',\n            unit_size: unit,\n            participant: 0,\n            name: block_name('Speech', 'Hebrew', unit),\n        });\n    }\n\n    return shuffleArray(blocks);\n};\n\nexport const exp1_picture_orientation = (exp1_recordings, unit_size, word, meaning, picture_variant, participant) => {\n    const filtered_recs = exp1_recordings.filter(r =>\n        r[0] === unit_size && r[2] === word && r[3] === meaning + picture_variant && parseInt(r[5]) === participant);\n\n    if (filtered_recs.length === 0) \n        return [Array(4).fill(undefined)];    \n    else\n        return filtered_recs[0][4];\n};\n\nexport const block_stimuli = (block, picture_variant, exp1_recordings) => {\n    const stims = [];\n    \n    for (let meaning in Meaning)\n        for (let pairing of [0, 1])\n            for (let word in NovelWord) {\n                const picture_orientation = exp1_picture_orientation(exp1_recordings,\n                                                                     block.unit_size,\n                                                                     word,\n                                                                     meaning,\n                                                                     picture_variant,\n                                                                     block.participant);\n                const s = {\n                    audio: audio_stimulus_url(\n                        block.medium,\n                        block.language,\n                        block.participant + 1,\n                        block.unit_size,\n                        word,\n                        picture_variant,\n                        picture_orientation,\n                        meaning,\n                    ),\n                    pictures: [\n                        visual_stimulus_url(meaning,\n                                            picture_variant,\n                                            picture_orientation),\n                        visual_stimulus_url(audio_visual_pairings[meaning][pairing], \n                                            picture_variant,\n                                            picture_orientation),\n                    ],\n                };\n\t\t\n                Object.assign(s, {\n                    exp1_subject: block.participant + 1,\n                    language: block.language,\n                    medium: block.medium,\n                    unit_size: block.unit_size,\n                    non_word: word,\n                    picture_set: picture_variant,\n                    picture_orientation: picture_orientation,\n                    semantic_field: semantic_field_for_meaning(meaning),\n                    correct_meaning: meaning,\n                    compared_meaning: audio_visual_pairings[meaning][pairing],\n                });\n                console.log(meaning);\n                stims.push(s);\n            }\n    \n    return shuffleArray(stims);\n    \n};\n\n\nexport const all_audio_urls = (exp1_recs) => {\n    const urls = [];\n\n    for (let m in Medium) {\n        for (let l in Language) {\n            for (let p = 1; p<=8; p++) {\n                for (let u in UnitSize) {\n                    for (let w in NovelWord) {\n                        for (let v = 1; v <= 2; v++) {\n                            for (let mn in Meaning) {\n                                const o = exp1_picture_orientation(exp1_recs, u, w, mn, v, p-1);\n                                if (o !== undefined)\n                                    urls.push(audio_stimulus_url(m, l, p, u, w, v, o, mn)); \n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return urls;\n};\n","import React from 'react';\nimport { ContinueButton } from './ui.js';\nimport { text_english } from './text.js';\nimport { semantic_field_meanings, visual_stimulus_url, SemanticField,\n         MeaningName, visual_stim_size, contrast_meanings, serial_meanings} from './stimuli.js';\nimport { randomElement, perm_to_seq } from './randomize.js';\n\nimport ls from 'local-storage';\n\nconst texts = text_english;\n\nexport const PictureSamplesScreen = ({next, semantic_fields_permutation, picture_variant, picture_orientation}) => {\n    const [intro, setIntro] = React.useState(true);\n    const [semanticFieldIdx, setSemanticFieldIdx] = React.useState(0);\n\n    const ls_prefix = \"picture_samples_\";\n\n    React.useEffect(() => {\n        const cont_field = ls.get(ls_prefix + \"semantic_field\");\n        \n        if (cont_field !== undefined && cont_field !== null) {\n            setSemanticFieldIdx(cont_field);\n            setIntro(ls.get(ls_prefix + \"in_intro\"));\n        }\n        else {\n            ls.set(ls_prefix + \"in_intro\", true);\n            ls.set(ls_prefix + \"semantic_field\", 0);\n        }\n    }, []);\n    \n    const nextSemanticField = () => {\n        setSemanticFieldIdx(semanticFieldIdx + 1);\n        ls.set(ls_prefix + \"semantic_field\", semanticFieldIdx + 1);\n    };\n    \n    const proceed_to_samples = () => {\n        setIntro(false);\n        ls.set(ls_prefix + \"in_intro\", false);\n    };\n\n    if (intro) {\n        const contrast_src = visual_stimulus_url(randomElement(contrast_meanings),\n                                                 picture_variant, picture_orientation);\n        const contrast_img = <img src={contrast_src} alt={contrast_src} width={visual_stim_size[0]} height={visual_stim_size[1]} />;\n        const serial_src = visual_stimulus_url(randomElement(serial_meanings),\n                                               picture_variant, picture_orientation);\n        const serial_img = <img src={serial_src} alt={serial_src}  width={visual_stim_size[0]} height={visual_stim_size[1]} />;\n        \n        return (\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2 infotext picture_imgs\">\n                  {texts.picture_samples.intro}\n                  <div className=\"text-center\">{contrast_img}</div>                  \n                  {texts.picture_samples.other_pictures}\n                  <div className=\"text-center\">{serial_img}</div>\n                  <br/>\n                  {texts.picture_samples.proceed}                  \n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col text-center\">\n                  <br/>\n                  <ContinueButton label={texts.continue_label}\n                                  next={proceed_to_samples}/>\n                </div>\n              </div>  \n            </div>\n        );\n    }\n    else {\n        const perm_seq = perm_to_seq(3, semantic_fields_permutation);\n        const semantic_field = SemanticField[perm_seq[semanticFieldIdx]];\n        const meanings = semantic_field_meanings[semantic_field]\n            .map(m => MeaningName[m]);\n        \n        console.log(meanings);\n        const imgs = meanings\n              .map(m => visual_stimulus_url(m, picture_variant, picture_orientation))\n              .map(src => <img src={src} alt={src} key={src}\n                               width={visual_stim_size[0]}\n                               height={visual_stim_size[1]}/>);\n\n        const instructions = semanticFieldIdx === 0 ?\n              texts.picture_samples.semantic_field_first : texts.picture_samples.semantic_field;\n\n        return (\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2 infotext text-center picture_imgs\">\n                  {instructions}\n                </div>\n                <div className=\"grid-wrapper\">\n                  {imgs}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\"></div>\n                <div className=\"col text-center\">\n                  <br/>\n                  <ContinueButton label={texts.continue_label}\n                                  next={semanticFieldIdx === 2 ? next : nextSemanticField}/>\n                </div>\n                <div className=\"col\"></div>\n              </div>\n            </div>\n        );\n    }\n};\n","export class AudioController {\n    constructor(srcs, onDoneLoading, onAudioEnded) {\n        this.players = [];\n        this.ids2players = {};\n        this.players2ids = {};\n        \n        for (const id of srcs) {\n            const playerIdx = this.players.length;\n            \n            if (id in this.ids2players) {\n                continue;\n            }\n            \n            this.ids2players[id] = playerIdx;\n            this.players2ids[playerIdx] = id;\n            \n            const p = new Audio(id);\n            p.addEventListener('canplaythrough', (e => this.audioLoaded(p)), false);\n            p.addEventListener('ended', (e => {\n                if (this.onAudioEnded) this.onAudioEnded(id);\n            }), false);\n            p.onerror = e => {\n                console.log(\"Error loading audio file: \" + id + \" (error code: \" + p.error.code + \").\");\n            };\n            \n            this.players.push(p);\n        }\n        \n        console.log(\"Loading \" + this.players.length + \" audio files\");\n        this.loadCount = 0;\n        this.onDoneLoading = onDoneLoading;\n        this.onAudioEnded = onAudioEnded;\n    }\n    \n    audioLoaded(player) {\n        this.loadCount+=1;\n        if (this.loadCount === this.players.length) {\n            if (this.onDoneLoading) this.onDoneLoading();\n        }\n    }\n    \n    play(audio_id) {\n        const playerIdx = this.ids2players[audio_id];\n\n        this.players[playerIdx].play()\n\t    .catch(err => {\n                console.log(\"Error while playing audio file: \" + err);\n\t    });\n    }\n    \n    stop(audio_id) {\n\tconst playerIdx = this.ids2players[audio_id];\n\tthis.players[playerIdx].pause();\n\tthis.players[playerIdx].currentTime = 0;\n    }\n}\n","import React from 'react';\nimport { LoadingScreen, InfoScreen } from './ui.js';\nimport { text_english } from './text.js';\nimport { AudioController } from './audio_controller.js';\nimport { block_stimuli, visual_stim_size } from './stimuli.js';\nimport { shuffleArray, randomElement } from './randomize.js';\nimport ls from 'local-storage';\n\nconst texts = text_english;\n\nconst TrialUI = ({ next, play, disable_play, disable_pictures, pictures, visual1_location }) => {\n    const select_picture = (idx) => {\n        next(idx === 0);\n    };\n\n    const imgs = pictures.map((url, i) =>\n        <button className=\"btn btn-outline-primary\"\n            onClick={() => select_picture(i)}\n            disabled={disable_pictures}\n            key={url} >\n            <img src={url} alt={url} width={visual_stim_size[0]} height={visual_stim_size[1]} />\n        </button>\n    );\n\n    const ordered_imgs = visual1_location === 'Left' ? imgs : [imgs[1], imgs[0]];\n\n    return (\n        <div className=\"container\">\n            <div className=\"row breathing-top\">\n                <div className=\"trial_imgs\">\n                    {ordered_imgs}\n                </div>\n            </div>\n            <div className=\"row tiny-breathing-top\">\n                <div className=\"col-md-8 offset-md-2 text-center\">\n                    <button className=\"btn btn-outline-success\" onClick={play} disabled={disable_play}>\n                        <img width=\"32\" height=\"32\" src=\"exp2021/icons8-speaker-80.png\" alt=\"play\" />\n                    </button>\n                </div>\n            </div>\n            <div className=\"row tiny-breathing-top\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {texts.trial_instructions}\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nclass ExperimentBlock extends React.Component {\n    ls_prefix = \"experiment_block_\"\n\n    state = {\n        trial_idx: 0,\n        play_count: 0,\n    }\n\n    constructor(props) {\n        super();\n        this.props = props;\n        this.ls_prefix = `experiment_block${this.props.block_idx}_`;\n\n        const cont_trial_idx = ls.get(this.ls_prefix + \"trial_idx\");\n        if (cont_trial_idx !== null) {\n            this.state.trial_idx = cont_trial_idx;\n            this.continued_trial = true;\n            this.state.visual1_location = ls.get(this.ls_prefix + \"visual1_location\");\n            if (!this.props.is_practice) {\n                this.trial_time = props.data.trials[props.data.trials.length - 1].trial_time;\n            }\n        }\n        else { // temp\n            this.continued_trial = false;\n        }\n    }\n\n    startTrial = (trial_idx) => {\n        const visual1_location = randomElement(['Left', 'Right']);\n        ls.set(this.ls_prefix + \"visual1_location\", visual1_location);\n\n        if (!this.props.is_practice) {\n            const trial_date = new Date();\n            this.trial_time = trial_date.getTime();\n            this.props.data.trials.push({\n                trial_time: trial_date.toString(),\n                trial: trial_idx\n            });\n        }\n\n        this.setState({\n            play_count: 0,\n            trial_idx: trial_idx,\n            visual1_location: visual1_location\n        });\n\n        ls.set(this.ls_prefix + \"trial_idx\", trial_idx);\n        ls.set(\"data\", this.props.data);\n    }\n\n    endTrial = (was_correct) => {\n        const { trial_idx, visual1_location } = this.state;\n\n        if (!this.props.is_practice) {\n            // trial end\n            const trials = this.props.data.trials;\n            const stimuli = this.props.block_stimuli[trial_idx];\n\n            Object.assign(trials[trials.length - 1], {\n                block: this.props.block_idx,\n                block_name: this.props.data.blocks[(this.props.block_idx - 1) + 4 * (this.props.data.session - 1)].name,\n                trial_duration: new Date().getTime() - this.trial_time,\n                visual1_location: visual1_location,\n                is_correct: was_correct,\n            });\n            Object.assign(trials[trials.length - 1], stimuli);\n\n            ls.set(\"data\", this.props.data);\n        }\n    }\n\n    componentDidMount() {\n        if (!this.continued_trial) {\n            this.startTrial(0);\n        }\n    }\n\n    nextTrial = (was_correct) => {\n        const { trial_idx } = this.state;\n\n        this.endTrial(was_correct);\n\n        if (trial_idx + 1 < this.props.block_stimuli.length) {\n            this.startTrial(trial_idx + 1);\n        }\n        else {\n            this.props.next();\n        }\n    }\n\n    playTrial = (trial_idx) => {\n        const { play_count } = this.state;\n        this.setState({ play_count: play_count + 1 });\n        console.log(\"Playing\", this.props.block_stimuli[trial_idx].audio);\n        this.props.audio_controller.play(this.props.block_stimuli[trial_idx].audio);\n        this.props.set_is_playing(true);\n    }\n\n    render() {\n        const { trial_idx, visual1_location, play_count } = this.state;\n\n        return <TrialUI next={this.nextTrial}\n            play={() => this.playTrial(trial_idx)}\n            disable_play={this.props.is_playing}\n            disable_pictures={play_count === 0 || this.props.is_playing}\n            pictures={this.props.block_stimuli[trial_idx].pictures}\n            visual1_location={visual1_location} />;\n    }\n}\n\nexport class Experiment extends React.Component {\n    ls_prefix = \"experiment_\"\n\n    steps = {\n        PRACTICE_INFO: 1,\n        PRACTICE_TRIALS: 2,\n        EXPERIMENT_INFO: 3,\n        EXPERIMENT_BLOCK1: 4,\n        PAUSE1: 5,\n        EXPERIMENT_BLOCK2: 6,\n        PAUSE2: 7,\n        EXPERIMENT_BLOCK3: 8,\n        PAUSE3: 9,\n        EXPERIMENT_BLOCK4: 10,\n    }\n\n    state = {\n        step: 1,\n        is_loading: true,\n        is_playing: false,\n    }\n\n    constructor({ data, exp1_recordings, next }) {\n        super();\n        this.next = next;\n        this.data = data;\n\n        const cont_block_stimuli = ls.get(this.ls_prefix + \"block_stimuli\");\n\n        if (cont_block_stimuli) {\n            console.log(\"Continuing experiment block...\");\n\n            this.block_stimuli = cont_block_stimuli;\n            this.practice_stimuli = ls.get(this.ls_prefix + \"practice_stimuli\");\n\n            const cont_step = ls.get(this.ls_prefix + \"step\");\n            if (cont_step)\n                this.state.step = cont_step;\n        }\n        else {\n            this.block_stimuli = this.data.blocks.map(\n                block => block_stimuli(block,\n                    this.data.picture_variant,\n                    exp1_recordings));\n            this.practice_stimuli = shuffleArray(this.block_stimuli.map(\n                b => randomElement(b)).flat(1));\n\n            ls.set(this.ls_prefix + \"block_stimuli\", this.block_stimuli);\n            ls.set(this.ls_prefix + \"practice_stimuli\", this.practice_stimuli);\n        }\n\n        console.log(\"block_stimuli\\n\", this.block_stimuli);\n        console.log(\"practice_stimuli\\n\", this.practice_stimuli);\n\n        const first_block_idx = (this.data.session - 1) * 4;\n        this.session_block_stimuli = this.block_stimuli.slice(first_block_idx, first_block_idx + 4);\n        console.log(\"blocks for session\", this.data.session, \"\\n\", this.data.blocks.slice(first_block_idx, first_block_idx + 4));\n\n    }\n\n    componentDidMount() {\n        const onDoneLoading = () => {\n            console.log(\"Done loading audio files.\");\n            this.setState({ is_loading: false });\n        };\n\n        const onAudioEnded = () => {\n            this.setState({ is_playing: false });\n        };\n\n        const audio_urls = [...this.session_block_stimuli.flat(1).map(s => s.audio),\n        ...this.practice_stimuli.map(s => s.audio)];\n        this.audio_controller = new AudioController(audio_urls, onDoneLoading, onAudioEnded);\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n        if (step === this.steps.EXPERIMENT_BLOCK4) {\n            this.next();\n        }\n        else {\n            const new_step = step + 1;\n            ls.set(this.ls_prefix + \"step\", new_step);\n            this.setState({ step: new_step });\n        }\n    }\n\n    render() {\n        const { step, is_loading, is_playing } = this.state;\n\n        if (is_loading) {\n            return <LoadingScreen />;\n        }\n\n        switch (step) {\n            case this.steps.PRACTICE_INFO:\n                return <InfoScreen info={texts.practice_info}\n                    continue_label={texts.continue_label}\n                    next={this.nextStep} />;\n            case this.steps.PRACTICE_TRIALS:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={true}\n                    block_stimuli={this.practice_stimuli}\n                    block_idx={0}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.EXPERIMENT_INFO:\n                return <InfoScreen info={texts.experiment_info}\n                    continue_label={texts.continue_label}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK1:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[0]}\n                    block_idx={1}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.PAUSE1:\n                return <InfoScreen info={texts.pause}\n                    continue_label={texts.continue_label}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK2:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[1]}\n                    block_idx={2}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.PAUSE2:\n                return <InfoScreen info={texts.pause}\n                    continue_label={texts.continue_label}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK3:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[2]}\n                    block_idx={3}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.PAUSE3:\n                return <InfoScreen info={texts.pause}\n                    continue_label={texts.continue_label}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK4:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[3]}\n                    block_idx={4}\n                    audio_controller={this.audio_controller} />;\n            default:\n                return null;\n        }\n    };\n}\n","import './App.css';\nimport React from 'react';\nimport ls from 'local-storage';\nimport { readSessionData, writeSessionEvent, SessionEvent, does_user_sheet_exists } from './sessions.js';\nimport { LoadingScreen, ErrorScreen, InfoScreen } from './ui.js';\nimport { text_english } from './text.js';\nimport gs from './spreadsheet_io.js';\nimport { LoginScreen } from './login.js';\nimport { SubjectDataScreen } from './subject_data.js';\nimport { PictureSamplesScreen } from './picture_samples.js';\nimport { Experiment } from './experiment.js';\nimport { counterbalance, shuffleArray, randomElement } from './randomize.js';\nimport { pilot_blocks } from './stimuli.js';\n\n/* TODO\n * - Randomize the semantic fields list !counterbalanced! between participants!\n * - Select the correct set of pictures for the current subject\n */\n\nconst texts = text_english;\n\nconst FinishScreen = ({ done_saving, data_save_error }) => {\n    return (\n        <div className=\"container\">\n            <div className=\"col-md-8 offset-md-2 finish-screen\">\n                {texts.finish}\n                <p className=\"font-weight-bold\">{done_saving ? texts.finish_success : texts.finish_wait}</p>\n                <p className=\"alert-error\">{data_save_error}</p>\n            </div>\n        </div>\n    );\n};\n\nclass App extends React.Component {\n    conn = {\n        spreadsheet_id: '1O3uiSh1z1V2UjcxOu6FfelqUrgZRI2HNBQ2f12jjjjg',\n        api_key: 'AIzaSyDHFHbGy_GhEt1Q4FW61YYEX2jk3hZcSoQ',\n        write_url: 'https://script.google.com/macros/s/AKfycbwQHtJwrLIE4_Ry5uDXtH1hZJg6xvUNUP-8kBqYTtGs2gENHMlbyFNE13CYXaMdx0H3vQ/exec'\n    }\n\n    steps = {\n        LOGIN: 1,\n        SUBJECT_DATA: 2,\n        INTRO: 3,\n        PICTURE_SAMPLES: 4,\n        EXPERIMENT_BLOCKS: 5,\n        FINISH: 6,\n    }\n\n    state = {\n        step: 1,\n        error: null,\n        data_save_error: null,\n        loading: false,\n    }\n\n    data = {\n        trials: []\n    }\n\n    componentDidMount() {\n        this.data.start_time = new Date().toString();\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n        this.setStep(step + 1);\n    }\n\n    stepWillChange = (prev_step, next_step) => {\n        if (prev_step === this.steps.LOGIN) {\n            this.handle_login();\n        }\n        else if (prev_step === this.steps.SUBJECT_DATA) {\n            ls.set(\"data\", this.data);\n        }\n\n        return null;\n    }\n\n    setStep = (new_step) => {\n        const { step } = this.state;\n        if (new_step !== step) {\n            const altered_step = this.stepWillChange(step, new_step);\n            if (altered_step) {\n                new_step = altered_step;\n            }\n\n            if (new_step > 2) {\n                ls.set(\"step\", new_step);\n            }\n\n            this.setState({ step: new_step });\n            this.stepChanged(new_step);\n        }\n    }\n\n    stepChanged = (step) => {\n        if (step === this.steps.FINISH) {\n            this.save_data();\n        }\n    }\n\n    check_for_subject_sheet = () => {\n        return does_user_sheet_exists(this.conn, this.data.id)\n            .then(sheet_exists => {\n                if (sheet_exists) {\n                    return true;\n                }\n                else {\n                    this.setState({\n                        error: texts.error_no_user_sheet + this.data.id,\n                        loading: false\n                    });\n                    return false;\n                }\n            })\n            .catch(err => {\n                this.setState({ error: texts.error_no_connection + \" (\" + err + \").\" });\n            });\n    }\n\n    // PILOT: We use a partial list of the first experiment trials\n    // load_exp1_recordings = () => {\n    //     return gs.read(this.conn, \"FirstExperimentTrials\", \"B2:G769\")\n    //         .then(res => res.json())\n    //         .then(exp1_data => this.exp1_recordings = exp1_data.values);\n    // }\n\n    load_exp1_recordings = () => {\n        return gs.read(this.conn, \"PilotFirstExperimentTrials\", \"B2:G769\")\n            .then(res => res.json())\n            .then(exp1_data => this.exp1_recordings = exp1_data.values);\n    }\n\n    handle_login = () => {\n        this.setState({ loading: true });\n\n        this.check_for_subject_sheet()\n            .then(found_sheet => {\n                if (found_sheet) {\n                    readSessionData(this.conn)\n                        .then(sessions => {\n                            const previous_sessions = sessions.filter(e => e.id === this.data.id);\n                            if (previous_sessions.length === 0) {\n                                // First session. Not continued!\n                                this.start_new_session(1);\n                            }\n                            else {\n                                // Not first session or continued session.\n                                const last_session = previous_sessions[previous_sessions.length - 1];\n                                const last_session_number = parseInt(last_session.session);\n\n                                if (last_session.event !== SessionEvent.SESSION_END) {\n                                    // Continue session\n                                    this.continue_session(last_session_number);\n                                }\n                                else {\n                                    // PILOT: In the pilot we have a single session (change to: === 2 for two sessions)\n                                    // Last session ended. \n                                    if (last_session_number === 1) {\n                                        this.setState({\n                                            error: texts.error_2nd_session_over,\n                                            loading: false\n                                        });\n                                    }\n                                    else {\n                                        // Second session\n                                        this.start_new_session(2);\n                                    }\n                                }\n                            }\n                        })\n                        .catch(err => {\n                            this.setState({ error: texts.error_no_connection + \" (\" + err + \").\" });\n                        });\n                }\n            });\n    }\n\n    start_new_session = (number) => {\n        console.log(\"Start new session:\", number);\n        this.data.session = number;\n\n        const start_session = () => {\n            console.log(\"Clearing local storage\");\n            ls.clear();\n            ls.set(\"data\", this.data);\n\n            if (number === 2 && this.state.step === this.steps.SUBJECT_DATA) {\n                this.nextStep();\n            }\n            this.load_exp1_recordings()\n                .then(() => {\n                    ls.set(\"exp1_recordings\", this.exp1_recordings);\n                    this.setState({ loading: false });\n                });\n        };\n\n        writeSessionEvent(this.conn, this.data, SessionEvent.SESSION_START);\n        if (number === 1) {\n            this.generate_subject_settings()\n                .then(() => {\n                    this.setState({ loading: false });\n                    start_session();\n                });\n        }\n        else {\n\n            this.load_subject_settings()\n                .then(start_session);\n        }\n    }\n\n    continue_session = (number) => {\n        console.log(\"Continue session:\", number);\n        const cont_data = ls.get(\"data\");\n        if (cont_data && cont_data.id === this.data.id) {\n            this.data = cont_data;\n            writeSessionEvent(this.conn, this.data, SessionEvent.SESSION_CONTINUED);\n            this.load_subject_settings()\n                .then(() => this.setState({ loading: false }));\n\n            const exp1_recordings = ls.get(\"exp1_recordings\");\n            if (exp1_recordings) {\n                this.exp1_recordings = exp1_recordings;\n            }\n            else {\n                this.load_exp1_recordings();\n            }\n\n            const cont_step = ls.get(\"step\");\n            if (cont_step) {\n                if (cont_step === this.steps.SUBJECT_DATA && number === 2) {\n                    this.setStep(cont_step + 1);\n                }\n                else {\n                    this.setStep(cont_step);\n                }\n            }\n        }\n        else {\n            this.start_new_session(number);\n        }\n    }\n\n    generate_subject_settings = () => {\n        return gs.read(this.conn, \"Subjects\", \"A2:I10000\")\n            .then(res => res.json())\n            .then(subjects_sheet => {\n                if (!subjects_sheet.values) {\n                    // first subject\n                    this.data.picture_samples_order = 0;\n                    this.data.picture_variant = 1;\n                    this.data.left_picture = 0;\n\n                    const exp1_subjects = shuffleArray([0, 1, 2, 3, 4, 5, 6, 7]);\n                    this.data.subject_Mu_E = exp1_subjects[0];\n                    this.data.subject_Mu_H = exp1_subjects[1];\n                    this.data.subject_Sp_E = exp1_subjects[2];\n                    this.data.subject_Sp_H = exp1_subjects[3];\n                }\n                else {\n                    const prev_settings = subjects_sheet.values;\n                    const prev_group_settings = prev_settings.filter(r => r[1] === this.data.group);\n\n                    // Picture samples order\n                    const prev_picture_samples = prev_settings.map(r => r[2]);\n                    this.data.picture_samples_order = counterbalance(6, prev_picture_samples);\n\n                    // Picture variant\n                    if (prev_group_settings.length === 0) {\n                        this.data.picture_variant = 1;\n                    }\n                    else {\n                        // PILOT: we always use variant 1\n                        // const prev_group_variants = prev_group_settings.map(r => r[3]);\n                        // let set1_count = 0;\n                        // for (let v of prev_group_variants) {\n                        //     if (v === \"1\")\n                        //         set1_count += 1;\n                        // }\n                        // const set2_count = prev_group_variants.length - set1_count;\n                        this.data.picture_variant = 1 // set1_count > set2_count ? 2 : 1;\n                    }\n\n                    // Picture order in a single trial\n                    const prev_left_picture = prev_settings.map(r => r[4]);\n                    this.data.left_picture = counterbalance(2, prev_left_picture);\n\n                    // Exp1 participant per block\n                    if (prev_group_settings.length === 0) {\n                        const exp1_subjects = shuffleArray([0, 1, 2, 3, 4, 5, 6, 7]);\n                        this.data.subject_Mu_E = exp1_subjects[0];\n                        this.data.subject_Mu_H = exp1_subjects[1];\n                        this.data.subject_Sp_E = exp1_subjects[2];\n                        this.data.subject_Sp_H = exp1_subjects[3];\n                    }\n                    else {\n                        const prev_subject_Mu_E = prev_group_settings.map(r => r[5]);\n                        const prev_subject_Mu_H = prev_group_settings.map(r => r[6]);\n                        const prev_subject_Sp_E = prev_group_settings.map(r => r[7]);\n                        const prev_subject_Sp_H = prev_group_settings.map(r => r[8]);\n\n                        this.data.subject_Mu_E = counterbalance(8, prev_subject_Mu_E);\n                        this.data.subject_Mu_H = counterbalance(8, prev_subject_Mu_H);\n                        this.data.subject_Sp_E = counterbalance(8, prev_subject_Sp_E);\n                        this.data.subject_Sp_H = counterbalance(8, prev_subject_Sp_H);\n                    }\n                }\n                // NOTE: Use blocks(this.data) for the full experiment\n                this.data.blocks = pilot_blocks(this.data);\n\n                const subject_row = Object.assign({}, this.data);\n                subject_row.blocks = JSON.stringify(subject_row.blocks);\n                return gs.write(this.conn, \"Subjects\", subject_row);\n            });\n    };\n\n    load_subject_settings = () => {\n        return gs.read(this.conn, \"Subjects\", \"A2:J10000\")\n            .then(res => res.json())\n            .then(subjects_sheet => {\n                if (!subjects_sheet.values) {\n                    this.setState({ error: texts.error_no_subject_settings + this.data.id });\n                }\n                else {\n                    // find last settings row for participant id\n                    const rows = subjects_sheet.values.filter(row => row[0] === this.data.id);\n                    if (rows.length === 0) {\n                        this.setState({ error: texts.error_no_subject_settings + this.data.id });\n                    }\n                    else {\n                        const settings_row = rows[rows.length - 1];\n                        this.data.group = settings_row[1];\n                        this.data.picture_samples_order = settings_row[2];\n                        this.data.picture_variant = settings_row[3];\n                        this.data.left_picture = settings_row[4];\n                        this.data.subject_Mu_E = settings_row[5];\n                        this.data.subject_Mu_H = settings_row[6];\n                        this.data.subject_Sp_E = settings_row[7];\n                        this.data.subject_Sp_H = settings_row[8];\n                        this.data.blocks = JSON.parse(settings_row[9]);\n                    }\n                }\n            });\n    };\n\n    save_data = () => {\n\n        this.data.end_time = new Date().toString();\n        this.data.trials.forEach(t => {\n            t.id = this.data.id;\n            t.session = this.data.session;\n            t.start_time = this.data.start_time;\n            t.end_time = this.data.end_time;\n            if (this.data.session === 1) {\n                t.gender = this.data.gender;\n                t.age = this.data.age;\n                t.musical_instrument = this.data.musical_instrument;\n                t.music_theory = this.data.music_theory;\n                t.activity = this.data.activity;\n                t.activity_specify = this.data.activity_specify;\n                t.acting = this.data.acting;\n            }\n        });\n        console.log(this.data);\n\n        const that = this;\n        gs.write(this.conn, this.data.id, this.data.trials)\n            .then(res => {\n                that.setState({ done_saving: true });\n                writeSessionEvent(this.conn, this.data, SessionEvent.SESSION_END);\n            })\n            .catch(this.show_data_save_error);\n\n    }\n\n    render() {\n        const { step, loading, error } = this.state;\n\n        if (error) {\n            return <ErrorScreen error={error} />;\n        }\n        else if (loading) {\n            return <LoadingScreen />;\n        }\n        else {\n            switch (step) {\n                case this.steps.LOGIN:\n                    return <LoginScreen next={this.nextStep} data={this.data} key={step} />;\n                case this.steps.SUBJECT_DATA:\n                    return <SubjectDataScreen next={this.nextStep} data={this.data} key={step} />;\n                case this.steps.INTRO:\n                    return <InfoScreen next={this.nextStep}\n                        info={texts.introduction}\n                        continue_label={texts.continue_label}\n                        key={step} />;\n                case this.steps.PICTURE_SAMPLES:\n                    return <PictureSamplesScreen next={this.nextStep}\n                        semantic_fields_permutation={this.data.picture_samples_order}\n                        picture_variant={this.data.picture_variant}\n                        picture_orientation={randomElement(['Right', 'Left'])}\n                        key={step} />;\n                case this.steps.EXPERIMENT_BLOCKS:\n                    return <Experiment next={this.nextStep}\n                        data={this.data}\n                        exp1_recordings={this.exp1_recordings}\n                        key={step} />;\n                case this.steps.FINISH:\n                    return <FinishScreen done_saving={this.state.done_saving} key={step} />;\n                default:\n                    return null;\n            }\n        }\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}