{"version":3,"sources":["spreadsheet_io.js","sessions.js","text.js","ui.js","login.js","subject_data.js","randomize.js","stimuli.js","picture_samples.js","audio_controller.js","experiment.js","final_questions.js","App.js","reportWebVitals.js","index.js"],"names":["read_url","parse_sheet_list","data","sheetNames","sheets","forEach","sheet","push","properties","title","gs","read","conn","sheetName","range","fetch","spreadsheet_id","api_key","write","Array","isArray","url","write_url","headers","method","mode","body","JSON","stringify","list_sheets","then","res","json","SheetNames","SessionEvent","parseSessions","sessions","values","session_event","session","id","event","time","writeSessionEvent","on_error","request_data","Object","assign","Date","toString","catch","readSessionData","response","does_user_sheet_exists","user_id","includes","texts","hebrew","continue_label","subject_id_label","group_label","group_options","introduction","Fragment","subject_data","header","musical_instrument","music_theory","musical_activity","musical_activity_specify","acting","done","validation","gender","gender_male","gender_female","gender_other","age","yes","no","picture_samples","intro","other_pictures","proceed","semantic_field_first","semantic_field","practice_info","trial_instructions","experiment_info","pause","finish","instructions","className","strategy_question","relationships_question","feedback_question","finish_success","finish_wait","error_no_user_sheet","error_no_connection","error_2nd_session_over","error_no_subject_settings","error_occurred","loading","english","classNames","classes","filter","Boolean","join","LoadingScreen","language","ErrorScreen","error","InfoScreen","info","next","continue_disabled","rtl","dir","disabled","label","Button","onClick","type","ContinueButton","ComboBox","options","name","defaultValue","value","map","opt","LoginScreen","React","useState","setError","id_input","document","getElementById","group_input","group","SubjectDataScreen","allTexts","validation_error","error_div","checked","activity","activity_yes","activity_no","activity_specify","acting_yes","acting_no","randomElement","arr","min","max","length","Math","floor","random","shuffleArray","a","sort","b","counterbalance","n","prev_vals","counts","fill","v","min_idxs","min_count","i","find_first_idx","k","n_partial_fact","Medium","Music","Speech","Language","English","Hebrew","UnitSize","Single","Multiple","NovelWord","Bulo","Tepi","PictureOrientation","Right","Left","Meaning","High","Low","Ascending","Descending","Large","Small","Growing","Shrinking","Near","Far","Approaching","Receding","MeaningName","SemanticField","semantic_field_meanings","Height","Size","Distance","semantic_field_for_meaning","meaning","indexOf","contrast_meanings","serial_meanings","audio_visual_pairings","visual_stim_size","audio_stimulus_url","medium","participant","unit_size","novel_word","picture_variant","picture_orientation","visual_stimulus_url","block_name","m","l","u","pilot_blocks","blocks","unit","exp1_picture_orientation","exp1_recordings","word","filtered_recs","r","parseInt","undefined","PictureSamplesScreen","semantic_fields_permutation","setIntro","semanticFieldIdx","setSemanticFieldIdx","ls_prefix","useEffect","cont_field","ls","get","set","contrast_src","contrast_img","src","alt","width","height","serial_src","serial_img","perm_seq","seq","s","Set","add","itr","from","ffi","idx","splice","perm_to_seq","meanings","console","log","imgs","AudioController","srcs","onDoneLoading","onAudioEnded","this","players","ids2players","players2ids","playerIdx","p","Audio","addEventListener","e","audioLoaded","onerror","code","loadCount","player","audio_id","play","err","currentTime","TrialUI","disable_play","disable_pictures","pictures","visual1_location","ordered_imgs","ExperimentBlock","props","state","trial_idx","play_count","startTrial","is_practice","trial_date","trial_time","getTime","trials","trial","setState","endTrial","was_correct","stimuli","block_stimuli","block","block_idx","trial_duration","is_correct","nextTrial","playTrial","audio","audio_controller","set_is_playing","cont_trial_idx","continued_trial","is_playing","Component","Experiment","steps","PRACTICE_INFO","PRACTICE_TRIALS","EXPERIMENT_INFO","EXPERIMENT_BLOCK1","PAUSE1","EXPERIMENT_BLOCK2","PAUSE2","EXPERIMENT_BLOCK3","PAUSE3","EXPERIMENT_BLOCK4","step","is_loading","nextStep","new_step","cont_block_stimuli","practice_stimuli","cont_step","stims","pairing","exp1_subject","non_word","picture_set","correct_meaning","compared_meaning","flat","first_block_idx","session_block_stimuli","slice","audio_urls","FinalQuestionsScreen","strategyTextarea","useRef","relationshipsTextarea","feedbackTextarea","style","ref","strategy","current","relationships","feedback","FinishScreen","done_saving","data_save_error","App","LOGIN","SUBJECT_DATA","INTRO","PICTURE_SAMPLES","EXPERIMENT_BLOCKS","FINAL_QUESTIONS","FINISH","setStep","stepWillChange","prev_step","next_step","handle_login","altered_step","stepChanged","save_data","check_for_subject_sheet","sheet_exists","load_exp1_recordings","exp1_data","found_sheet","previous_sessions","start_new_session","last_session","last_session_number","continue_session","number","start_session","clear","generate_subject_settings","load_subject_settings","cont_data","subjects_sheet","prev_settings","prev_group_settings","prev_picture_samples","picture_samples_order","prev_left_picture","left_picture","exp1_subjects","subject_Mu_E","subject_Mu_H","subject_Sp_E","subject_Sp_H","prev_subject_Mu_E","prev_subject_Mu_H","prev_subject_Sp_E","prev_subject_Sp_H","subject_row","rows","row","settings_row","parse","end_time","t","start_time","that","show_data_save_error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.78d43ab0.chunk.js","sourcesContent":["/* functions for reading and writing to a google spreadsheet.\n   \n */\n\nconst read_url = \"https://sheets.googleapis.com/v4/spreadsheets/\";\n\n// https://stackoverflow.com/questions/1714786/query-string-encoding-of-a-javascript-object\nexport const serialize = function(obj, prefix) {\n  var str = [],\n    p;\n  for (p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      var k = prefix ? prefix + \"[\" + p + \"]\" : p,\n        v = obj[p];\n      str.push((v !== null && typeof v === \"object\") ?\n        serialize(v, k) :\n        encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n    }\n  }\n  console.log(\"serialize: \" + str.join(\"&\"));\n  return str.join(\"&\");\n}\n\nconst parse_sheet_list = (data) => {\n  let sheetNames = [];\n  data.sheets.forEach(sheet => {\n    sheetNames.push(sheet.properties.title);\n  });\n  return sheetNames;\n};\n\nconst gs = {\n  read: function(conn, sheetName, range) {\n    return fetch(read_url + \n                 conn.spreadsheet_id + \n                 \"/values/\" + \n                 sheetName + \n                 \"!\" + range + \n                 \"?key=\" + conn.api_key);\n  },\n\n  write: function(conn, sheetName, data) {\n    if (!Array.isArray(data))\n        data = [data];\n    let url = conn.write_url + \"?sheet_name=\" + sheetName;\n    return fetch(url,\n                 {\n                   headers: {\n                     'Accept': 'application/json',\n                     'Content-Type': 'application/json'\n                   },\n                   method: \"POST\",\n                   mode: 'no-cors',\n                   body: JSON.stringify(data),\n                 });\n  },\n\n  list_sheets: function(conn) {\n    return fetch(read_url + conn.spreadsheet_id + \"?key=\" + conn.api_key)\n      .then(res => res.json())\n      .then(parse_sheet_list);\n  },\n};\n\nexport default gs;\n","import gs from './spreadsheet_io.js';\n\nconst SheetNames = {\n    SESSIONS: \"Sessions\",\n    SUBJECTS: \"Subjects\",\n};\n\nexport const SessionEvent = {\n    SESSION_START: \"SESSION_START\",\n    SESSION_CONTINUED: \"SESSION_CONTINUED\",\n    SESSION_END: \"SESSION_END\",\n};\n\n// parse session json data from sheets api into an array of session objects.\nexport const parseSessions = (data) => {\n    let sessions = [];\n    data.values.forEach(session_event => {\n\tlet session = {\n\t    id: session_event[0],\n\t    session: session_event[1],\n\t    event: session_event[2],\n\t    time: session_event[3],\n\t};\n\tsessions.push(session);\n    });\n    return sessions;\n};\n\nexport const writeSessionEvent = (conn, session, event, on_error) => {\n    let request_data = Object.assign({event: event,\n                                      time: new Date().toString()},\n                                     session);\n    gs.write(conn, SheetNames.SESSIONS, request_data)\n\t.catch(on_error);\n    \n};\n\nexport const readSessionData = (conn) => {\n    return gs.read(conn, SheetNames.SESSIONS, \"A2:E10000\")\n\t.then(response => response.json())\n\t.then(parseSessions);\n    \n};\n\nexport const does_user_sheet_exists = (conn, user_id) => {\n    return gs.list_sheets(conn)\n\t.then(sheets => sheets.includes(user_id));\n};\n\nexport const read_subject_data = (conn, subject_id) => {\n    return gs.read(conn, SheetNames.SUBJECTS, \"A2:C10000\")\n\t.then(response => response.json())\n\t.then(data => {\n\t    for (const row of data.values) {\n\t\tif (row.length !== 3)\n\t\t    continue;\n\t\t\n        if (row[0] === subject_id) {\n            const subject_data = {\n\t\tid: row[0],\n            };\n            return subject_data;\n        }\n\t    }\n\t    return null;\n\t});\n};\n","import React from 'react';\n\nexport const texts = {\n  hebrew: {\n    continue_label: \"המשך\",\n\n    subject_id_label: \"מספר נבדק:\",\n\n    group_label: \"קבוצה:\",\n\n    group_options: [\n      \"מוזיקאי ישראלי\",\n      \"לא-מוזיקאי ישראלי\",\n      \"מוזיקאי אמריקאי\",\n      \"לא-מוזיקאי אמריקאי\",\n    ],\n\n    introduction:\n      <React.Fragment>\n        <p>\n          בניסוי זה מטלה מסוג אחד שתחזור פעמים רבות: בכל שלב בניסוי תראו שני איורים ותשמעו קול (דיבור או שירה). עליכם לבחור בכל שלב את התמונה המתאימה יותר, לפי תחושתכם או האינטואיציה שלכם, למה שמבטא הקול.\n        </p>\n        <p>\n          הניסוי יתחיל באימון קצר, שלאחריו ארבע קבוצות של מטלות. בין קבוצות המטלות תוכלו לקחת הפסקות קצרות. בסיום הניסוי תתבקשו לתת משוב קצר.\n        </p>\n        <p>\n          משך הניסוי כ-40 דקות.\n        </p>\n        <p>\n          לחצו ״המשך״ למעבר למסך הבא.\n        </p>\n      </React.Fragment>,\n\n    subject_data: {\n      header:\n        <p>תודה על ההשתתפות בניסוי. אנא מלאו את הפרטים הבאים:</p>,\n\n      musical_instrument:\n        <p>\n          האם למדת ביצוע מוזיקאלי (נגינה או שירה) באופן פורמלי (במוסד לחינוך מוזיקאלי או עם מורה)? אם למדת, ציין/י את מספר השנים. אם לא  בחר/י ״0״.\n        </p>,\n\n      music_theory:\n        <p>\n          האם למדת תיאוריה מוזיקאלית באופן פורמאלי (במוסד לחינוך מוזיקאלי או עם מורה)? אם למדת, ציין/י את מספר השנים. אם לא - בחר/י ״0״.\n        </p>,\n\n      musical_activity:\n        <p>\n          האם את/ה עוסק בפעילות מוזיקאלית (ביצוע, הלחנה, אלתור...) באופן מקצועי או כתחביב רציני?\n        </p>,\n\n      musical_activity_specify:\n        <p>\n          אם כן, אנא פרט\n        </p>,\n\n      acting:\n        <p>\n          האם את/ה עוסק/ת במשחק (בתיאטרון, קולנוע וכד׳) באופן מקצועי או כתחביב רציני?\n        </p>,\n\n      done:\n        <p>\n          לאחר שעניתם על כל השאלות לחצו ״המשך״ למעבר למסך הבא.\n        </p>,\n\n      validation: \"אנא מלאו את כל הפרטים לפני לחיצה על ״המשך״\",\n      gender: \"מין\",\n      gender_male: \"זכר\",\n      gender_female: \"נקבה\",\n      gender_other: \"אחר\",\n      age: \"גיל\",\n      yes: \"כן\",\n      no: \"לא\",\n    },\n\n    picture_samples: {\n\n      intro:\n        <React.Fragment>\n          <p>\n            לפני שנתחיל, הביטו באיורים שבהם נשתמש בניסוי.\n          </p>\n          <p>\n            בכמה מהאיורים תראו שני אובייקטים המנוגדים באחת מתכונותיהם. חץ יצביע על אחד משני אובייקטים: זהו האובייקט שאליו מתייחס האיור; האובייקט השני מוצג לשם השוואה בלבד. לדוגמה:\n          </p>\n        </React.Fragment>,\n\n      other_pictures:\n        <p>\n          באיורים אחרים תראו סדרה של תמונות, המתארת פעולה או תהליך. החיצים בסדרה מסמנים את הסדר הכרונולוגי של האירועים המתוארים (מה קודם למה). לדוגמה:\n        </p>,\n\n      proceed:\n        <p>\n          לחצו ״המשך״ למעבר למסך הבא.\n        </p>,\n\n      semantic_field_first:\n        <p>\n          לפניכם ארבעה איורים בהם נשתמש בניסוי. שימו לב לאיורים וליחסים ביניהם.\n        </p>,\n\n      semantic_field:\n        <p>\n          לפניכם ארבעה איורים נוספים בהם נשתמש בניסוי. שימו לב לאיורים וליחסים ביניהם.\n        </p>,\n    },\n\n    practice_info:\n      <React.Fragment>\n        <p>\n          נתחיל בתרגול קצר. בכל אחד משלבי התרגול תראו שני איורים ותשמעו קול (דיבור או שירה). עליכם לבחור בכל שלב את התמונה המתאימה יותר, לפי תחושתכם או האינטואיציה שלכם, למה שמבטא הקול.\n        </p>\n        <p>לחצו ״המשך״ לתחילת האימון.</p>\n      </React.Fragment>,\n\n    trial_instructions:\n      <p>\n        אנא הקישו על אייקון הצליל שלמטה והקשיבו לקול המושמע. אחרי שהאזנתם להקלטה במלואה, הקישו על האיור המתאים יותר למה שמביע הקול, על פי האינטואיציה או ״תחושת הבטן״ שלכם. אם אינכם בטוחים, האזינו להקלטה שוב (הקישו שוב על האייקון). עם הלחיצה על האיור תועברו אל המסך הבא.\n      </p>,\n\n    experiment_info:\n      <React.Fragment>\n        <p>נתחיל עתה בניסוי עצמו</p>\n        <p>\n          המטלות בניסוי זהות למטלות התרגול שסיימתם זה עתה. בכל שלב בניסוי תראו שני איורים ומתחתם אייקון. הקישו על האייקון והקשיבו לקול המושמע. אחרי שהאזנתם להקלטה במלואה, הקישו על האיור המתאים יותר למה שמביע הקול, על פי האינטואיציה או ״תחושת הבטן״ שלכם. אם אינכם בטוחים, תוכלו להאזין להקלטה שוב (הקישו שוב על האייקון). הקשה על אחד האיורים תעביר אתכם אל המסך הבא.\n        </p>\n        <p>\n          לשאלות אודות הליך הניסוי, צרו עכשיו קשר עם הנסיינים. אם ההליך ברור, הקישו ״המשך״ להתחלת הניסוי.\n        </p>\n      </React.Fragment>,\n\n    pause:\n      <p>תוכלו לצאת עכשיו להפסקה קצרה. להמשך הניסוי, לחצו ״המשך״.</p>,\n\n    finish: {\n      instructions: \n        <React.Fragment>\n          <p className=\"font-weight-bold\">תודה רבה על השתתפותכם בניסוי.</p>\n          <p>אנא ענו על כמה שאלות הקשורות לניסוי שסיימתם זה עתה (כתבו בתיבת הטקסט שמתחת לשאלה)</p>\n        </React.Fragment>,\n      strategy_question: \n        <p>האם הסתמכתם על אסטרטגיה או שיטה מסוימת בבחירת הציורים המתאימים? אם כן, פרטו.</p>,\n      relationships_question: \n        <p>האם הבחנתם בקשרים בין תכני הציורים לבין אופן השירה או הדיבור המתייחס אליהם? אם כן, ציינו כמה דוגמאות לקשרים כאלו.</p>,\n      feedback_question:\n        <p>נשמח לכל משוב נוסף על הניסוי (אם התשובה ארוכה, פרטו בדף נפרד).</p>,\n      done:\n        <React.Fragment>\n          <p>תודה רבה על השתתפותכם בניסוי.</p> \n          <p>אנא צרו קשר עם הנסיינים.</p>\n        </React.Fragment>\n    },\n\n    finish_success: \"Done uploading data!\",\n    finish_wait: \"Please wait while uploading data...\",\n    error_no_user_sheet: \"Can't find a data sheet for participant id \",\n    error_no_connection: \"Can't connect. Please check your internet connection and try again.\",\n    error_2nd_session_over: \"A participant with this participant id has already completed the experiment.\",\n    error_no_subject_settings: \" Can't find previous settings for participant id \",\n    error_occurred: \"An error has occurred\",\n    loading: \"Loading...\",\n  },\n  english: {\n    continue_label: \"Proceed\",\n\n    subject_id_label: \"Participant number:\",\n\n    group_label: \"Group:\",\n\n    group_options: [\n      \"Israeli musician\",\n      \"Israeli non-musician\",\n      \"American musician\",\n      \"American non-musician\",\n    ],\n\n    introduction:\n      <React.Fragment>\n        <p>\n          This experiment has a single task repeated many times. In each trial, you will see two pictures and hear a voice that is singing or speaking a word. Your task is to select the picture that best matches what the voice seems to express according to your subjective intuition or \"feeling.\"\n        </p>\n        <p>\n          The experiment begins with a short practice session followed by four \"blocks\" of trials. There will be pauses between blocks. The duration of each pause is self-timed.\n        </p>\n        <p>\n          The duration of the experiment is approximately 40 minutes.\n        </p>\n        <p>\n          Press \"proceed\" to continue.\n        </p>\n      </React.Fragment>,\n\n    subject_data: {\n      header:\n        <p>Thank you for your participation in this experiment. Please provide the following information:</p>,\n\n      musical_instrument:\n        <p>\n          Have you studied music performance (playing an instrument or singing) in an institution or with a teacher? If you have, please specify for how many years. If you have not, choose “0”.\n        </p>,\n\n      music_theory:\n        <p>\n          Have you studied music theory in an institution or with a teacher? If you have, please specify for how many years. If you have not, choose “0”.\n        </p>,\n\n      musical_activity:\n        <p>\n          Are you currently involved in any musical activity (e.g., music performance, music composition, music improvisation) professionally or as a serious hobby?\n        </p>,\n\n      musical_activity_specify:\n        <p>\n          If you are, please specify\n        </p>,\n\n      acting:\n        <p>\n          Are you currently involved in acting (professionally or as a serious hobby)?\n        </p>,\n\n      done:\n        <p>\n          When done, please press \"proceed\"\n        </p>,\n\n      validation: \"Please complete all cells before pressing proceed\",\n      gender: \"Gender\",\n      gender_male: \"Male\",\n      gender_female: \"Female\",\n      gender_other: \"Other\",\n      age: \"Age\",\n      yes: \"Yes\",\n      no: \"No\",\n    },\n\n    picture_samples: {\n\n      intro:\n        <React.Fragment>\n          <p>\n            Let's have a look at the pictures used in the experiment.\n          </p>\n          <p>\n            In some pictures you see 2 objects contrasting in a particular feature. An arrow points at one of the objects. This is the object the picture referes to. The other object is presented for comparison. For instance:\n          </p>\n        </React.Fragment>,\n\n      other_pictures:\n        <p>\n          Other pictures are comprised of a series of drawings, depicting a process or action. The arrows in these series denote the temporal order of the drawings.\n        </p>,\n\n      proceed:\n        <p>\n          Press \"proceed\" when ready to continue.\n        </p>,\n\n      semantic_field_first:\n        <p>\n          Here are 4 pictures to be used in the experiment. Please note these pictures and their relationships. Press \"proceed\" when ready to continue.\n        </p>,\n\n      semantic_field:\n        <p>\n          Here are additional 4 pictures used in the experiment. Please note these pictures and their relationships. Press \"proceed\" when ready to continue.\n        </p>,\n\n\n    },\n\n    practice_info:\n      <React.Fragment>\n        <p>\n          In the following practice trials, you will see two pictures and hear a voice, singing or speaking. Your task is to select the picture that better matches, according to your subjective intuition or \"feeling,\" what the voice seems to express.\n        </p>\n        <p>Please press \"proceed\" to begin the practice trials.</p>\n      </React.Fragment>,\n\n    trial_instructions:\n      <p>\n        Please click the sound icon and listen to the voice recording. After listening to the entire recording, click the picture that better matches the meaning that the voice seems to express, according to your intuition or \"feeling.\" If you are unsure, you may listen again, by re-clicking the sound icon. Once you click one of the pictures, you will move to the next screen.\n      </p>,\n\n    experiment_info:\n      <React.Fragment>\n        <p>We now begin the experiment</p>\n        <p>\n          The experiment trials are identical to the practice trials you have just completed. In each trial, you will see two pictures with a sound icon below them. Click the sound icon and listen to the voice recording. After listening to the entire recording, click the picture that better matches the meaning that the voice seems to express, according to your intuition or \"feeling.\" If you are unsure, you may listen again, by re-clicking the sound icon. Once you click one of the pictures, you will move to the next screen.\n        </p>\n        <p>\n          If you have any questions regarding the procedure, please contact the experimenter now. If everything is clear, press \"proceed\" and the experiment will immediately begin.\n        </p>\n      </React.Fragment>,\n\n    pause:\n      <p>You may now take a short break. When you want to proceed, press the \"proceed\" box below.</p>,\n\n    finish: {\n      instructions: \n        <React.Fragment>\n          <p>Thank you! You have completed the experiment.</p>\n          <p>Please address the following questions (type in the text boxes below each question)</p>\n        </React.Fragment>,\n      strategy_question: \n        <p>Did you apply a system or strategy/strategies in matching sound and pictures?</p>,\n      relationships_question: \n        <p>Did you notice specific relationships between vocal expression (in singing or speaking) and the meanings it depicted? Please specify.</p>,\n      feedback_question:\n        <p>Please write any other feedback that you believe may be significant.</p>,\n      done:\n        <React.Fragment>\n          <p>Thanks you for participating in the experiment.</p> \n          <p>Please contact the experimenter.</p>\n        </React.Fragment>\n    },\n\n    finish_success: \"Done uploading data!\",\n    finish_wait: \"Please wait while uploading data...\",\n    error_no_user_sheet: \"Can't find a data sheet for participant id \",\n    error_no_connection: \"Can't connect. Please check your internet connection and try again.\",\n    error_2nd_session_over: \"A participant with this participant id has already completed the experiment.\",\n    error_no_subject_settings: \" Can't find previous settings for participant id \",\n    error_occurred: \"An error has occurred\",\n    loading: \"Loading...\",\n  },\n}","import React from 'react';\nimport { texts } from './text.js';\n\nexport const classNames = (...classes) => classes.filter(Boolean).join(' ');\n\nexport const openFullscreen = () => {\n  const elem = document.documentElement;\n  if (elem.requestFullscreen) {\n    elem.requestFullscreen();\n  } else if (elem.mozRequestFullScreen) { /* Firefox */\n    elem.mozRequestFullScreen();\n  } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n    elem.webkitRequestFullscreen();\n  } else if (elem.msRequestFullscreen) { /* IE/Edge */\n    elem.msRequestFullscreen();\n  }\n};\n\nexport const LoadingScreen = ({language}) => {\n    return <div className=\"containter text-center\"><p className=\"lead\">{texts[language].loading}</p></div>;\n};\n\nexport const ErrorScreen = ({error, language}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <p>{texts[language].error_occurred}:</p>\n          <p className=\"lead center\">{error}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const InfoScreen = ({info, next, continue_disabled, continue_label, rtl}) => {\n  return (\n    <div className={classNames(\"container\", rtl && \"text-right\")} dir={rtl && \"rtl\"}>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8 infotext\">\n          {info}\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col\"></div>\n        <div className=\"col text-center\">\n          <br/>\n            <ContinueButton next={next} disabled={continue_disabled} label={continue_label}/>\n        </div>\n        <div className=\"col\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport const Button = ({label, onClick, disabled}) => {\n  return disabled ? \n    <button type=\"button\" className=\"btn btn-primary\" onClick={onClick} disabled>{label}</button> :\n    <button type=\"button\" className=\"btn btn-primary\" onClick={onClick}>{label}</button>;\n};\n\nexport const ContinueButton = ({next, label, disabled}) => {\n  return <Button label={label || \"המשך\"} onClick={next} disabled={disabled}/>;\n};\n\n/* 4 buttons in a square layout with fixation point in the middle. Each button is assigned a value to be passed to \n   the next function when it's clicked. */\nexport const ButtonTable = ({labels, values, disabled, next}) => {\n  const gen_button = (btn_idx) => {\n    if (disabled) \n      return <button className=\"chordBtn\" disabled onClick={(e) => next(values[btn_idx])}>{labels[btn_idx]}</button>;\n    else \n      return <button className=\"chordBtn\" onClick={(e) => next(values[btn_idx])}>{labels[btn_idx]}</button>;\n  };\n\n  return (\n    <table className=\"chordSelection\">\n      <tbody>\n        <tr>\n          <td>{gen_button(0)}</td>\n          <td></td>\n          <td>{gen_button(1)}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td className=\"plusSign align-middle\">+</td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>{gen_button(2)}</td>\n          <td></td>\n          <td>{gen_button(3)}</td>\n        </tr>\n      </tbody>\n    </table>   \n  );\n};\n\nexport const ComboBox = ({id, options, disabled}) => {\n  if (disabled) {\n    return (\n      <select id={id} name={id} defaultValue=\"\" disabled>\n        <option disabled value=\"\"></option>\n        {options.map(opt => <option value={opt} key={opt}>{opt}</option>)}\n      </select>\n    );\n  }\n  else {\n    return (\n      <select id={id} name={id} defaultValue=\"\">\n        <option disabled value=\"\"></option>\n        {options.map(opt => <option value={opt} key={opt}>{opt}</option>)}\n      </select>\n    );\n  }\n};\n","import React from 'react';\nimport { texts } from './text.js';\nimport { ContinueButton, ComboBox } from './ui.js';\n\nexport const LoginScreen = ({next, data}) => {\n    const [error, setError] = React.useState(null);\n    \n    const handleContinue = () => {\n        const id_input = document.getElementById('id_input');\n        const group_input = document.getElementById('group_input');\n        \n        if (id_input.value === \"\" || group_input.value === \"\") {\n            setError(\"Please select group and participant number.\");\n            return;\n        }\n        \n        data.id = id_input.value;\n        data.group = group_input.value;\n        switch (data.group) {\n          case \"Israeli musician\":            \n          case \"Israeli non-musician\":\n            data.language = \"hebrew\";\n            break;\n          case \"American musician\":\n          case \"American non-musician\":\n            data.language = \"english\";\n            break;\n          default:\n            data.language = null;\n        }\n        next();\n    };\n    \n    return (\n        <div className=\"container\">\n          <div className=\"row breathing-top justify-content-center\">\n            <div className=\"col-4\">\n              <table>\n                <tbody>\n                  <tr>\n                    <th>{texts[\"english\"].subject_id_label}</th>\n                    <td><input type=\"text\" id=\"id_input\"/></td>\n                  </tr>\n                  <tr>\n                    <th>{texts[\"english\"].group_label}</th>\n                    <td><ComboBox id=\"group_input\" options={texts[\"english\"].group_options}/></td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col text-center breathing-top\">\n              <ContinueButton next={handleContinue} label={texts[\"english\"].continue_label}/>\n              <div className=\"error\">\n                {error}\n              </div>              \n            </div>\n          </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { texts as allTexts } from './text.js';\nimport { classNames, ContinueButton } from './ui.js';\n\nexport const SubjectDataScreen = ({ next, data }) => {\n  const texts = allTexts[data.language];\n  const [error, setError] = React.useState(null);\n  const validation_error = () => setError(texts.subject_data.validation);\n\n  const saveData = () => {\n    const gender_male = document.getElementById('male');\n    const gender_female = document.getElementById('female');\n    const gender_other = document.getElementById('other');\n    let gender;\n    if (gender_male.checked) {\n      gender = gender_male.value;\n    }\n    else if (gender_female.checked) {\n      gender = gender_female.value;\n    }\n    else if (gender_other.checked) {\n      gender = gender_other.value;\n    }\n    else {\n      validation_error();\n      return;\n    }\n\n    const age = document.getElementById('age_input').value;\n    const musical_instrument = document.getElementById('instrument_input').value;\n    const music_theory = document.getElementById('theory_input').value;\n\n    if (age === \"\" || musical_instrument === \"\" || music_theory === \"\") {\n      validation_error();\n      return;\n    }\n\n    const activity_yes = document.getElementById('activity_yes');\n    const activity_no = document.getElementById('activity_no');\n    let activity;\n    if (activity_yes.checked) {\n      activity = activity_yes.value;\n    }\n    else if (activity_no.checked) {\n      activity = activity_no.value;\n    }\n    else {\n      validation_error();\n      return;\n    }\n\n    const activity_specify = document.getElementById('activity_specify_input').value;\n    if (activity_specify === \"\" && activity_yes.checked) {\n      validation_error();\n      return;\n    }\n\n    const acting_yes = document.getElementById('acting_yes');\n    const acting_no = document.getElementById('acting_no');\n    let acting;\n    if (acting_yes.checked) {\n      acting = acting_yes.value;\n    }\n    else if (acting_no.checked) {\n      acting = acting_no.value;\n    }\n    else {\n      validation_error();\n      return;\n    }\n\n    data.gender = gender;\n    data.age = age;\n    data.musical_instrument = musical_instrument;\n    data.music_theory = music_theory;\n    data.activity = activity;\n    data.activity_specify = activity_specify;\n    data.acting = acting;\n\n    next();\n  };\n\n  const error_div = error ? (\n    <div className=\"error\">\n      {error}\n    </div>\n  ) : null;\n\n  return (\n    <div className={classNames(\"container\", data.language === \"hebrew\" && \"text-right\")} dir={data.language === \"hebrew\" && \"rtl\"}>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8 breathing-top\">\n          {texts.subject_data.header}\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          <table>\n            <tbody>\n              <tr>\n                <th><p>{texts.subject_data.gender}</p></th>\n                <td>\n                  <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" />\n                  <label>{texts.subject_data.gender_male}</label>\n                  <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" />\n                  <label>{texts.subject_data.gender_female}</label>\n                  <input type=\"radio\" id=\"other\" name=\"gender\" value=\"other\" />\n                  <label>{texts.subject_data.gender_other}</label>\n                </td>\n              </tr>\n              <tr>\n                <th><p>{texts.subject_data.age}</p></th>\n                <td><input type=\"text\" id=\"age_input\" /></td>\n              </tr>\n              <tr>\n                <th>{texts.subject_data.musical_instrument}</th>\n                <td><input type=\"text\" id=\"instrument_input\" /></td>\n              </tr>\n              <tr>\n                <th>{texts.subject_data.music_theory}</th>\n                <td><input type=\"text\" id=\"theory_input\" /></td>\n              </tr>\n              <tr>\n                <th>{texts.subject_data.musical_activity}</th>\n                <td>\n                  <input type=\"radio\" id=\"activity_yes\" name=\"activity\" value=\"yes\" />\n                  <label>{texts.subject_data.yes}</label>\n                  <input type=\"radio\" id=\"activity_no\" name=\"activity\" value=\"no\" />\n                  <label>{texts.subject_data.no}</label>\n                </td>\n              </tr>\n              <tr>\n                <th>{texts.subject_data.musical_activity_specify}</th>\n                <td><input type=\"text\" id=\"activity_specify_input\" /></td>\n              </tr>\n              <tr>\n                <th>{texts.subject_data.acting}</th>\n                <td>\n                  <input type=\"radio\" id=\"acting_yes\" name=\"acting\" value=\"yes\" />\n                  <label>{texts.subject_data.yes}</label>\n                  <input type=\"radio\" id=\"acting_no\" name=\"acting\" value=\"no\" />\n                  <label>{texts.subject_data.no}</label>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col text-center font-weight-bold\">\n          <br />\n          {texts.subject_data.done}\n          <ContinueButton label={texts.continue_label} next={saveData} />\n          {error_div}\n        </div>\n      </div>\n    </div>\n\n\n\n  );\n};\n","export function repeatArray(arr, count) {     \n  var ln = arr.length;\n  var b = [];\n  for(let i=0; i<count; i++) {      \n    b.push(arr[i%ln]);      \n  }\n      \n  return b;      \n}\n\n/* random int between min and max inclusive. */\nexport const randomInt = (min, max) => \n  Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const randomElement = arr => arr[randomInt(0, arr.length-1)];\n\nexport const shuffleArray = arr => arr\n  .map(a => [Math.random(), a])\n  .sort((a, b) => a[0] - b[0])\n  .map(a => a[1]);\n\nexport const randomSequence = (items, length) => shuffleArray(repeatArray(items, length));\n\nexport const counterbalance = (n, prev_vals) => {\n    const counts = Array(n).fill(0);\n    for (const v of prev_vals) {\n        if (counts[v]) {\n            counts[v] += 1;\n        }\n        else {\n            counts[v] = 1;\n        }\n    }\n\n    let min_idxs = [];\n    let min_count = null;\n    \n    for (let i=0; i<n; i++) {\n        if (min_count === null || counts[i] < min_count) {\n            min_count = counts[i];\n            min_idxs = [i];\n        }\n\telse if (counts[i] === min_count) {\n\t    min_idxs.push(i);\n\t}\n    }\n \n    return randomElement(min_idxs);\n};\n\nconst find_first_idx = (k, n) => {\n    if (n === 1)\n        return {i: 0, k: k};\n\n    n -= 1;\n    \n    let first_idx = 0;\n    let n_partial_fact = n;\n\n    while (k >= n_partial_fact && n > 1) {\n        n_partial_fact = n_partial_fact * (n - 1);\n        n -= 1;\n    }\n\n    first_idx = Math.floor(k / n_partial_fact);\n    k = k % n_partial_fact;\n    return {i: first_idx, k: k};\n};\n\nexport const perm_to_seq = (n, k) => {\n    const seq = [];\n    let s = new Set();\n\n    for (let i=0; i<n; i++)\n        s.add(i);\n    \n    for (let i=0; i<n; i++) {\n        const itr = Array.from(s);\n        const ffi = find_first_idx(k, n-i);\n        const idx = ffi.i;\n        k = ffi.k;\n        \n        seq.push(itr[idx]);\n        itr.splice(idx, 1);\n        s = new Set(itr);\n    }\n\n    return seq;\n};\n","import { shuffleArray } from './randomize.js';\n\nexport const Medium = {\n    Music: \"Mu\",\n    Speech: \"Sp\",\n};\n\nexport const Language = {\n    English: \"E\",\n    Hebrew: \"H\",\n};\n\nexport const UnitSize = {\n    Single: \"Sn\",\n    Multiple: \"Ml\",\n};\n\nexport const NovelWord = {\n    Bulo: \"B\",\n    Tepi: \"T\",\n};\n\nexport const PictureOrientation = {\n    Right: \"R\",\n    Left: \"L\",\n};\n\nexport const Meaning = {\n    High: 1,\n    Low: 2,\n    Ascending: 3,\n    Descending: 4,\n    Large: 5,\n    Small: 6,\n    Growing: 7,\n    Shrinking: 8,\n    Near: 9,\n    Far: 10,\n    Approaching: 11,\n    Receding: 12,\n};\n\nexport const MeaningName = [\n    null, \"High\", \"Low\", \"Ascending\", \"Descending\", \"Large\", \"Small\",\n    \"Growing\", \"Shrinking\", \"Near\", \"Far\", \"Approaching\", \"Receding\",\n];\n\nexport const SemanticField = [\"Height\", \"Size\", \"Distance\"];\n\nexport const semantic_field_meanings = {\n    Height: [1, 2, 3, 4],\n    Size: [5, 6, 7, 8],\n    Distance: [9, 10, 11, 12],\n};\n\nexport const semantic_field_for_meaning = (meaning) => {\n    return SemanticField[Math.floor((MeaningName.indexOf(meaning) - 1) / 4)];\n};\n\nexport const contrast_meanings = [\"High\", \"Low\", \"Far\", \"Near\", \"Large\", \"Small\"];\nexport const serial_meanings = [\"Ascending\", \"Descending\", \"Approaching\", \"Receding\", \"Growing\", \"Shrinking\"];\n\n// Mapping between audio meaning and possible wrong answer picture meanings.\nexport const audio_visual_pairings = {\n    High: [\"Low\", \"Ascending\"],\n    Low: [\"High\", \"Descending\"],\n    Ascending: [\"Descending\", \"High\"],\n    Descending: [\"Ascending\", \"Low\"],\n    Large: [\"Small\", \"Growing\"],\n    Small: [\"Large\", \"Shrinking\"],\n    Growing: [\"Shrinking\", \"Large\"],\n    Shrinking: [\"Growing\", \"Small\"],\n    Near: [\"Far\", \"Approaching\"],\n    Far: [\"Near\", \"Receding\"],\n    Approaching: [\"Receding\", \"Near\"],\n    Receding: [\"Approaching\", \"Far\"],\n};\n\nexport const audio_ext = \".mp3\";\nexport const image_ext = \".jpg\";\n\nconst audio_stim_dir = \"stimuli/audio/\";\nconst visual_stim_dir = \"stimuli/images/\";\n\nexport const visual_stim_size = [480, 270];\n\nexport const audio_stimulus_url = (medium,\n                                   language,\n                                   participant,\n                                   unit_size,\n                                   novel_word,\n                                   picture_variant,\n                                   picture_orientation,\n                                   meaning) =>\n{\n    return audio_stim_dir + Medium[medium] + \"_\" +\n        Language[language] + \"_\" +\n        participant + \"_\" +\n        UnitSize[unit_size] + \"_\" +\n        NovelWord[novel_word] + \"_\" +\n        picture_variant + \"_\" +\n        PictureOrientation[picture_orientation] + \"_\" +\n        Meaning[meaning] +\n        audio_ext;\n};\n\nexport const visual_stimulus_url = (meaning,\n                                    picture_variant,\n                                    picture_orientation) =>\n{\n    return visual_stim_dir + MeaningName[Meaning[meaning]] +\n        picture_variant +\n        PictureOrientation[picture_orientation] +\n        image_ext;\n};\n\nexport const block_name = (m, l, u) => {\n    if (m === 'Music') {\n\tif (l === 'English') {\n\t    if (u === 'Single') return 'A';\t  \n\t    else return 'B';\n\t}\n\telse {\n\t    if (u === 'Single') return 'C';\n\t    else return 'D';\n\t}\n    } else {\n\tif (l === 'English') {\n\t    if (u === 'Single') return 'E';\n\t    else return 'F';\n\t}\n\telse {\n\t    if (u === 'Single') return 'G';\n\t    else return 'H';\n\t}\n    }\n};\n\nexport const blocks = (data) => {\n    let blocks = [];\n    for (let medium in Medium)\n        for (let lang in Language) {\n            const participant = data[`subject_${Medium[medium]}_${Language[lang]}`];\n\n            for (let unit in UnitSize) {\n                blocks.push({\n                    medium: medium,\n                    language: lang,\n                    unit_size: unit,\n\t\t            participant: participant,\n\t\t            name: block_name(medium, lang, unit),\n                });\n            }\n        }\n    return shuffleArray(blocks);\n};\n\nexport const pilot_blocks = (data) => {\n    let blocks = [];\n    for (let unit in UnitSize) {\n        blocks.push({\n            medium: 'Music',\n            language: 'Hebrew',\n            unit_size: unit,\n            participant: 2,\n            name: block_name('Music', 'Hebrew', unit),\n        });\n    }\n\n    for (let unit in UnitSize) {\n        blocks.push({\n            medium: 'Speech',\n            language: 'Hebrew',\n            unit_size: unit,\n            participant: 0,\n            name: block_name('Speech', 'Hebrew', unit),\n        });\n    }\n\n    return shuffleArray(blocks);\n};\n\nexport const exp1_picture_orientation = (exp1_recordings, unit_size, word, meaning, picture_variant, participant) => {\n    const filtered_recs = exp1_recordings.filter(r =>\n        r[0] === unit_size && r[2] === word && r[3] === meaning + picture_variant && parseInt(r[5]) === participant);\n\n    if (filtered_recs.length === 0) \n        return [Array(4).fill(undefined)];    \n    else\n        return filtered_recs[0][4];\n};\n\nexport const block_stimuli = (block, picture_variant, exp1_recordings) => {\n    const stims = [];\n    \n    for (let meaning in Meaning)\n        for (let pairing of [0, 1])\n            for (let word in NovelWord) {\n                const picture_orientation = exp1_picture_orientation(exp1_recordings,\n                                                                     block.unit_size,\n                                                                     word,\n                                                                     meaning,\n                                                                     picture_variant,\n                                                                     block.participant);\n                const s = {\n                    audio: audio_stimulus_url(\n                        block.medium,\n                        block.language,\n                        block.participant + 1,\n                        block.unit_size,\n                        word,\n                        picture_variant,\n                        picture_orientation,\n                        meaning,\n                    ),\n                    pictures: [\n                        visual_stimulus_url(meaning,\n                                            picture_variant,\n                                            picture_orientation),\n                        visual_stimulus_url(audio_visual_pairings[meaning][pairing], \n                                            picture_variant,\n                                            picture_orientation),\n                    ],\n                };\n\t\t\n                Object.assign(s, {\n                    exp1_subject: block.participant + 1,\n                    language: block.language,\n                    medium: block.medium,\n                    unit_size: block.unit_size,\n                    non_word: word,\n                    picture_set: picture_variant,\n                    picture_orientation: picture_orientation,\n                    semantic_field: semantic_field_for_meaning(meaning),\n                    correct_meaning: meaning,\n                    compared_meaning: audio_visual_pairings[meaning][pairing],\n                });\n                console.log(meaning);\n                stims.push(s);\n            }\n    \n    return shuffleArray(stims);\n    \n};\n\n\nexport const all_audio_urls = (exp1_recs) => {\n    const urls = [];\n\n    for (let m in Medium) {\n        for (let l in Language) {\n            for (let p = 1; p<=8; p++) {\n                for (let u in UnitSize) {\n                    for (let w in NovelWord) {\n                        for (let v = 1; v <= 2; v++) {\n                            for (let mn in Meaning) {\n                                const o = exp1_picture_orientation(exp1_recs, u, w, mn, v, p-1);\n                                if (o !== undefined)\n                                    urls.push(audio_stimulus_url(m, l, p, u, w, v, o, mn)); \n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return urls;\n};\n","import React from 'react';\nimport { classNames, ContinueButton } from './ui.js';\nimport { texts as allTexts } from './text.js';\nimport {\n  semantic_field_meanings, visual_stimulus_url, SemanticField,\n  MeaningName, visual_stim_size, contrast_meanings, serial_meanings\n} from './stimuli.js';\nimport { randomElement, perm_to_seq } from './randomize.js';\n\nimport ls from 'local-storage';\n\nexport const PictureSamplesScreen = ({ next, semantic_fields_permutation, picture_variant, picture_orientation, language }) => {\n  const texts = allTexts[language];\n  const [intro, setIntro] = React.useState(true);\n  const [semanticFieldIdx, setSemanticFieldIdx] = React.useState(0);\n\n  const ls_prefix = \"picture_samples_\";\n\n  React.useEffect(() => {\n    const cont_field = ls.get(ls_prefix + \"semantic_field\");\n\n    if (cont_field !== undefined && cont_field !== null) {\n      setSemanticFieldIdx(cont_field);\n      setIntro(ls.get(ls_prefix + \"in_intro\"));\n    }\n    else {\n      ls.set(ls_prefix + \"in_intro\", true);\n      ls.set(ls_prefix + \"semantic_field\", 0);\n    }\n  }, []);\n\n  const nextSemanticField = () => {\n    setSemanticFieldIdx(semanticFieldIdx + 1);\n    ls.set(ls_prefix + \"semantic_field\", semanticFieldIdx + 1);\n  };\n\n  const proceed_to_samples = () => {\n    setIntro(false);\n    ls.set(ls_prefix + \"in_intro\", false);\n  };\n\n  if (intro) {\n    const contrast_src = visual_stimulus_url(randomElement(contrast_meanings),\n      picture_variant, picture_orientation);\n    const contrast_img = <img src={contrast_src} alt={contrast_src} width={visual_stim_size[0]} height={visual_stim_size[1]} />;\n    const serial_src = visual_stimulus_url(randomElement(serial_meanings),\n      picture_variant, picture_orientation);\n    const serial_img = <img src={serial_src} alt={serial_src} width={visual_stim_size[0]} height={visual_stim_size[1]} />;\n\n    return (\n      <div className={classNames(\"container\", language === \"hebrew\" && \"text-right\")} dir={language === \"hebrew\" && \"rtl\"}>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8 infotext picture_imgs\">\n            {texts.picture_samples.intro}\n            <div className=\"text-center\">{contrast_img}</div>\n            {texts.picture_samples.other_pictures}\n            <div className=\"text-center\">{serial_img}</div>\n            <br />\n            {texts.picture_samples.proceed}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <br />\n            <ContinueButton label={texts.continue_label}\n              next={proceed_to_samples} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  else {\n    const perm_seq = perm_to_seq(3, semantic_fields_permutation);\n    const semantic_field = SemanticField[perm_seq[semanticFieldIdx]];\n    const meanings = semantic_field_meanings[semantic_field]\n      .map(m => MeaningName[m]);\n\n    console.log(meanings);\n    const imgs = meanings\n      .map(m => visual_stimulus_url(m, picture_variant, picture_orientation))\n      .map(src => <img src={src} alt={src} key={src}\n        width={visual_stim_size[0]}\n        height={visual_stim_size[1]} />);\n\n    const instructions = semanticFieldIdx === 0 ?\n      texts.picture_samples.semantic_field_first : texts.picture_samples.semantic_field;\n\n    return (\n      <div className={classNames(\"container\", language === \"hebrew\" && \"text-right\")} dir={language === \"hebrew\" && \"rtl\"}>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8 infotext text-center picture_imgs\">\n            {instructions}\n          </div>\n          <div className=\"grid-wrapper\">\n            {imgs}\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col\"></div>\n          <div className=\"col text-center\">\n            <br />\n            <ContinueButton label={texts.continue_label}\n              next={semanticFieldIdx === 2 ? next : nextSemanticField} />\n          </div>\n          <div className=\"col\"></div>\n        </div>\n      </div>\n    );\n  }\n};\n","export class AudioController {\n    constructor(srcs, onDoneLoading, onAudioEnded) {\n        this.players = [];\n        this.ids2players = {};\n        this.players2ids = {};\n        \n        for (const id of srcs) {\n            const playerIdx = this.players.length;\n            \n            if (id in this.ids2players) {\n                continue;\n            }\n            \n            this.ids2players[id] = playerIdx;\n            this.players2ids[playerIdx] = id;\n            \n            const p = new Audio(id);\n            p.addEventListener('canplaythrough', (e => this.audioLoaded(p)), false);\n            p.addEventListener('ended', (e => {\n                if (this.onAudioEnded) this.onAudioEnded(id);\n            }), false);\n            p.onerror = e => {\n                console.log(\"Error loading audio file: \" + id + \" (error code: \" + p.error.code + \").\");\n            };\n            \n            this.players.push(p);\n        }\n        \n        console.log(\"Loading \" + this.players.length + \" audio files\");\n        this.loadCount = 0;\n        this.onDoneLoading = onDoneLoading;\n        this.onAudioEnded = onAudioEnded;\n    }\n    \n    audioLoaded(player) {\n        this.loadCount+=1;\n        if (this.loadCount === this.players.length) {\n            if (this.onDoneLoading) this.onDoneLoading();\n        }\n    }\n    \n    play(audio_id) {\n        const playerIdx = this.ids2players[audio_id];\n\n        this.players[playerIdx].play()\n\t    .catch(err => {\n                console.log(\"Error while playing audio file: \" + err);\n\t    });\n    }\n    \n    stop(audio_id) {\n\tconst playerIdx = this.ids2players[audio_id];\n\tthis.players[playerIdx].pause();\n\tthis.players[playerIdx].currentTime = 0;\n    }\n}\n","import React from 'react';\nimport { LoadingScreen, InfoScreen, classNames } from './ui.js';\nimport { texts as allTexts } from './text.js';\nimport { AudioController } from './audio_controller.js';\nimport { block_stimuli, visual_stim_size } from './stimuli.js';\nimport { shuffleArray, randomElement } from './randomize.js';\nimport ls from 'local-storage';\n\nconst TrialUI = ({ next, play, disable_play, disable_pictures, pictures, visual1_location, language }) => {\n    const texts = allTexts[language];\n    const select_picture = (idx) => {\n        next(idx === 0);\n    };\n\n    const imgs = pictures.map((url, i) =>\n        <button className=\"btn btn-outline-primary\"\n            onClick={() => select_picture(i)}\n            disabled={disable_pictures}\n            key={url} >\n            <img src={url} alt={url} width={visual_stim_size[0]} height={visual_stim_size[1]} />\n        </button>\n    );\n\n    const ordered_imgs = visual1_location === 'Left' ? imgs : [imgs[1], imgs[0]];\n\n    return (\n        <div className={classNames(\"container\", language === \"hebrew\" && \"text-right\")} dir={language === \"hebrew\" && \"rtl\"}>\n            <div className=\"row breathing-top justify-content-center\">\n                <div className=\"trial_imgs\">\n                    {ordered_imgs}\n                </div>\n            </div>\n            <div className=\"row tiny-breathing-top justify-content-center\">\n                <div className=\"col-md-8 text-center\">\n                    <button className=\"btn btn-outline-success\" onClick={play} disabled={disable_play}>\n                        <img width=\"32\" height=\"32\" src=\"icons8-speaker-80.png\" alt=\"play\" />\n                    </button>\n                </div>\n            </div>\n            <div className=\"row tiny-breathing-top justify-content-center\">\n                <div className=\"col-md-8\">\n                    {texts.trial_instructions}\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nclass ExperimentBlock extends React.Component {\n    ls_prefix = \"experiment_block_\"\n\n    state = {\n        trial_idx: 0,\n        play_count: 0,\n    }\n\n    constructor(props) {\n        super();\n        this.props = props;\n        this.ls_prefix = `experiment_block${this.props.block_idx}_`;\n\n        const cont_trial_idx = ls.get(this.ls_prefix + \"trial_idx\");\n        if (cont_trial_idx !== null) {\n            this.state.trial_idx = cont_trial_idx;\n            this.continued_trial = true;\n            this.state.visual1_location = ls.get(this.ls_prefix + \"visual1_location\");\n            if (!this.props.is_practice) {\n                this.trial_time = props.data.trials[props.data.trials.length - 1].trial_time;\n            }\n        }\n        else { // temp\n            this.continued_trial = false;\n        }\n    }\n\n    startTrial = (trial_idx) => {\n        const visual1_location = randomElement(['Left', 'Right']);\n        ls.set(this.ls_prefix + \"visual1_location\", visual1_location);\n\n        if (!this.props.is_practice) {\n            const trial_date = new Date();\n            this.trial_time = trial_date.getTime();\n            this.props.data.trials.push({\n                trial_time: trial_date.toString(),\n                trial: trial_idx\n            });\n        }\n\n        this.setState({\n            play_count: 0,\n            trial_idx: trial_idx,\n            visual1_location: visual1_location\n        });\n\n        ls.set(this.ls_prefix + \"trial_idx\", trial_idx);\n        ls.set(\"data\", this.props.data);\n    }\n\n    endTrial = (was_correct) => {\n        const { trial_idx, visual1_location } = this.state;\n\n        if (!this.props.is_practice) {\n            // trial end\n            const trials = this.props.data.trials;\n            const stimuli = this.props.block_stimuli[trial_idx];\n\n            Object.assign(trials[trials.length - 1], {\n                block: this.props.block_idx,\n                block_name: this.props.data.blocks[(this.props.block_idx - 1) + 4 * (this.props.data.session - 1)].name,\n                trial_duration: new Date().getTime() - this.trial_time,\n                visual1_location: visual1_location,\n                is_correct: was_correct,\n            });\n            Object.assign(trials[trials.length - 1], stimuli);\n\n            ls.set(\"data\", this.props.data);\n        }\n    }\n\n    componentDidMount() {\n        if (!this.continued_trial) {\n            this.startTrial(0);\n\n            // for testing purposes:\n            // this.startTrial(this.props.block_stimuli.length-2);\n        }\n    }\n\n    nextTrial = (was_correct) => {\n        const { trial_idx } = this.state;\n\n        this.endTrial(was_correct);\n\n        if (trial_idx + 1 < this.props.block_stimuli.length) {\n            this.startTrial(trial_idx + 1);\n        }\n        else {\n            this.props.next();\n        }\n    }\n\n    playTrial = (trial_idx) => {\n        const { play_count } = this.state;\n        this.setState({ play_count: play_count + 1 });\n        console.log(\"Playing\", this.props.block_stimuli[trial_idx].audio);\n        this.props.audio_controller.play(this.props.block_stimuli[trial_idx].audio);\n        this.props.set_is_playing(true);\n    }\n\n    render() {\n        const { trial_idx, visual1_location, play_count } = this.state;\n\n        return <TrialUI \n            next={this.nextTrial}\n            play={() => this.playTrial(trial_idx)}\n            disable_play={this.props.is_playing}\n            disable_pictures={play_count === 0 || this.props.is_playing}\n            pictures={this.props.block_stimuli[trial_idx].pictures}\n            visual1_location={visual1_location}\n            language={this.props.data.language} />;\n    }\n}\n\nexport class Experiment extends React.Component {\n    ls_prefix = \"experiment_\"\n\n    steps = {\n        PRACTICE_INFO: 1,\n        PRACTICE_TRIALS: 2,\n        EXPERIMENT_INFO: 3,\n        EXPERIMENT_BLOCK1: 4,\n        PAUSE1: 5,\n        EXPERIMENT_BLOCK2: 6,\n        PAUSE2: 7,\n        EXPERIMENT_BLOCK3: 8,\n        PAUSE3: 9,\n        EXPERIMENT_BLOCK4: 10,\n    }\n\n    state = {\n        step: 1,\n        is_loading: true,\n        is_playing: false,\n    }\n\n    constructor({ data, exp1_recordings, next }) {\n        super();\n        this.next = next;\n        this.data = data;\n\n        const cont_block_stimuli = ls.get(this.ls_prefix + \"block_stimuli\");\n\n        if (cont_block_stimuli) {\n            console.log(\"Continuing experiment block...\");\n\n            this.block_stimuli = cont_block_stimuli;\n            this.practice_stimuli = ls.get(this.ls_prefix + \"practice_stimuli\");\n\n            const cont_step = ls.get(this.ls_prefix + \"step\");\n            if (cont_step)\n                this.state.step = cont_step;\n        }\n        else {\n            this.block_stimuli = this.data.blocks.map(\n                block => block_stimuli(block,\n                    this.data.picture_variant,\n                    exp1_recordings));\n            this.practice_stimuli = shuffleArray(this.block_stimuli.map(\n                b => randomElement(b)).flat(1));\n\n            ls.set(this.ls_prefix + \"block_stimuli\", this.block_stimuli);\n            ls.set(this.ls_prefix + \"practice_stimuli\", this.practice_stimuli);\n        }\n\n        console.log(\"block_stimuli\\n\", this.block_stimuli);\n        console.log(\"practice_stimuli\\n\", this.practice_stimuli);\n\n        const first_block_idx = (this.data.session - 1) * 4;\n        this.session_block_stimuli = this.block_stimuli.slice(first_block_idx, first_block_idx + 4);\n        console.log(\"blocks for session\", this.data.session, \"\\n\", this.data.blocks.slice(first_block_idx, first_block_idx + 4));\n\n    }\n\n    componentDidMount() {\n        const onDoneLoading = () => {\n            console.log(\"Done loading audio files.\");\n            this.setState({ is_loading: false });\n        };\n\n        const onAudioEnded = () => {\n            this.setState({ is_playing: false });\n        };\n\n        const audio_urls = [...this.session_block_stimuli.flat(1).map(s => s.audio),\n        ...this.practice_stimuli.map(s => s.audio)];\n        this.audio_controller = new AudioController(audio_urls, onDoneLoading, onAudioEnded);\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n        if (step === this.steps.EXPERIMENT_BLOCK4) {\n            this.next();\n        }\n        else {\n            const new_step = step + 1;\n            ls.set(this.ls_prefix + \"step\", new_step);\n            this.setState({ step: new_step });\n        }\n    }\n\n    render() {\n        const texts = allTexts[this.data.language];\n        const { step, is_loading, is_playing } = this.state;\n\n        if (is_loading) {\n            return <LoadingScreen language={this.data.language}/>;\n        }\n\n        switch (step) {\n            case this.steps.PRACTICE_INFO:\n                return <InfoScreen info={texts.practice_info}\n                    continue_label={texts.continue_label}\n                    next={this.nextStep} \n                    rtl={this.data.language === \"hebrew\"} />;\n            case this.steps.PRACTICE_TRIALS:\n                return <ExperimentBlock \n                    next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={true}\n                    block_stimuli={this.practice_stimuli}\n                    block_idx={0}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.EXPERIMENT_INFO:\n                return <InfoScreen info={texts.experiment_info}\n                    rtl={this.data.language === \"hebrew\"}\n                    continue_label={texts.continue_label}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK1:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[0]}\n                    block_idx={1}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.PAUSE1:\n                return <InfoScreen info={texts.pause}\n                    continue_label={texts.continue_label}\n                    rtl={this.data.language === \"hebrew\"}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK2:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[1]}\n                    block_idx={2}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.PAUSE2:\n                return <InfoScreen info={texts.pause}\n                    continue_label={texts.continue_label}\n                    rtl={this.data.language === \"hebrew\"}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK3:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[2]}\n                    block_idx={3}\n                    audio_controller={this.audio_controller} />;\n            case this.steps.PAUSE3:\n                return <InfoScreen info={texts.pause}\n                    continue_label={texts.continue_label}\n                    rtl={this.data.language === \"hebrew\"}\n                    next={this.nextStep} />;\n            case this.steps.EXPERIMENT_BLOCK4:\n                return <ExperimentBlock next={this.nextStep}\n                    data={this.data}\n                    is_playing={is_playing}\n                    set_is_playing={(v) => this.setState({ is_playing: v })}\n                    is_practice={false}\n                    block_stimuli={this.session_block_stimuli[3]}\n                    block_idx={4}\n                    audio_controller={this.audio_controller} />;\n            default:\n                return null;\n        }\n    };\n}\n","import React from 'react';\nimport { texts as allTexts } from './text.js';\nimport { classNames, ContinueButton } from './ui.js';\n\n\nexport const FinalQuestionsScreen = ({ next, data }) => {\n  const texts = allTexts[data.language];\n  // const [error, setError] = React.useState(null);\n  // const validation_error = () => setError(texts.subject_data.validation);\n\n  const strategyTextarea = React.useRef();\n  const relationshipsTextarea = React.useRef();\n  const feedbackTextarea = React.useRef();\n\n  const saveData = () => {\n    data.strategy = strategyTextarea.current.value;\n    data.relationships = relationshipsTextarea.current.value;\n    data.feedback = feedbackTextarea.current.value;\n\n    next();\n  };\n\n  // const error_div = error ? (\n  //   <div className=\"error\">\n  //     {error}\n  //   </div>\n  // ) : null;\n  const rtl = data.language === \"hebrew\";\n\n  return (\n    <div className={classNames(\"container\", rtl && \"text-right\")} dir={rtl && \"rtl\"}>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8 breathing-top\">\n          {texts.finish.instructions}\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8 mb-4\">\n          {texts.finish.strategy_question}\n          <textarea className=\"w-100\" style={{height: \"100px\"}} ref={strategyTextarea}></textarea>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8 mb-4\">\n          {texts.finish.relationships_question}\n          <textarea className=\"w-100\" style={{height: \"100px\"}} ref={relationshipsTextarea}></textarea>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8 mb-4\">\n          {texts.finish.feedback_question}\n          <textarea className=\"w-100\" style={{height: \"100px\"}} ref={feedbackTextarea}></textarea>\n        </div>\n      </div>\n\n      <div className=\"row justify-content-center\">\n        <div className=\"col text-center font-weight-bold\">\n          <br />\n          <ContinueButton label={texts.continue_label} next={saveData} />\n          {/* {error_div} */}\n        </div>\n      </div>\n    </div>\n\n\n\n  );\n};\n","import './App.css';\nimport React from 'react';\nimport ls from 'local-storage';\nimport { readSessionData, writeSessionEvent, SessionEvent, does_user_sheet_exists } from './sessions.js';\nimport { LoadingScreen, ErrorScreen, InfoScreen, classNames } from './ui.js';\nimport { texts } from './text.js';\nimport gs from './spreadsheet_io.js';\nimport { LoginScreen } from './login.js';\nimport { SubjectDataScreen } from './subject_data.js';\nimport { PictureSamplesScreen } from './picture_samples.js';\nimport { Experiment } from './experiment.js';\nimport { counterbalance, shuffleArray, randomElement } from './randomize.js';\nimport { pilot_blocks } from './stimuli.js';\nimport { FinalQuestionsScreen } from './final_questions.js';\n\n/* TODO\n * - Randomize the semantic fields list !counterbalanced! between participants!\n * - Select the correct set of pictures for the current subject\n */\n\n\nconst FinishScreen = ({ done_saving, data_save_error, language }) => {\n    return (\n        <div className={classNames(\"container\", language === \"hebrew\" && \"text-right\")} dir={language === \"hebrew\" && \"rtl\"}>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8 finish-screen\">\n                    {texts[language].finish.done}\n                    <p className=\"font-weight-bold\">{done_saving ? texts[language].finish_success : texts[language].finish_wait}</p>\n                    <p className=\"alert-error\">{data_save_error}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nclass App extends React.Component {\n    conn = {\n        spreadsheet_id: '1O3uiSh1z1V2UjcxOu6FfelqUrgZRI2HNBQ2f12jjjjg',\n        api_key: 'AIzaSyDHFHbGy_GhEt1Q4FW61YYEX2jk3hZcSoQ',\n        write_url: 'https://script.google.com/macros/s/AKfycbwQHtJwrLIE4_Ry5uDXtH1hZJg6xvUNUP-8kBqYTtGs2gENHMlbyFNE13CYXaMdx0H3vQ/exec'\n    }\n\n    steps = {\n        LOGIN: 1,\n        SUBJECT_DATA: 2,\n        INTRO: 3,\n        PICTURE_SAMPLES: 4,\n        EXPERIMENT_BLOCKS: 5,\n        FINAL_QUESTIONS: 6,\n        FINISH: 7,\n    }\n\n    state = {\n        step: 1,\n        error: null,\n        data_save_error: null,\n        loading: false,\n    }\n\n    data = {\n        trials: [],\n        language: \"english\",\n    }\n\n    componentDidMount() {\n        this.data.start_time = new Date().toString();\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n        this.setStep(step + 1);\n    }\n\n    stepWillChange = (prev_step, next_step) => {\n        if (prev_step === this.steps.LOGIN) {\n            this.handle_login();\n        }\n        else if (prev_step === this.steps.SUBJECT_DATA) {\n            ls.set(\"data\", this.data);\n        }\n\n        return null;\n    }\n\n    setStep = (new_step) => {\n        const { step } = this.state;\n        if (new_step !== step) {\n            const altered_step = this.stepWillChange(step, new_step);\n            if (altered_step) {\n                new_step = altered_step;\n            }\n\n            if (new_step > 2) {\n                ls.set(\"step\", new_step);\n            }\n\n            this.setState({ step: new_step });\n            this.stepChanged(new_step);\n        }\n    }\n\n    stepChanged = (step) => {\n        if (step === this.steps.FINISH) {\n            this.save_data();\n        }\n    }\n\n    check_for_subject_sheet = () => {\n        return does_user_sheet_exists(this.conn, this.data.id)\n            .then(sheet_exists => {\n                if (sheet_exists) {\n                    return true;\n                }\n                else {\n                    this.setState({\n                        error: texts[this.data.language].error_no_user_sheet + this.data.id,\n                        loading: false\n                    });\n                    return false;\n                }\n            })\n            .catch(err => {\n                this.setState({ error: texts[this.data.language].error_no_connection + \" (\" + err + \").\" });\n            });\n    }\n\n    // PILOT: We use a partial list of the first experiment trials\n    // load_exp1_recordings = () => {\n    //     return gs.read(this.conn, \"FirstExperimentTrials\", \"B2:G769\")\n    //         .then(res => res.json())\n    //         .then(exp1_data => this.exp1_recordings = exp1_data.values);\n    // }\n\n    load_exp1_recordings = () => {\n        return gs.read(this.conn, \"PilotFirstExperimentTrials\", \"B2:G769\")\n            .then(res => res.json())\n            .then(exp1_data => this.exp1_recordings = exp1_data.values);\n    }\n\n    handle_login = () => {\n        this.setState({ loading: true });\n\n        this.check_for_subject_sheet()\n            .then(found_sheet => {\n                if (found_sheet) {\n                    readSessionData(this.conn)\n                        .then(sessions => {\n                            const previous_sessions = sessions.filter(e => e.id === this.data.id);\n                            if (previous_sessions.length === 0) {\n                                // First session. Not continued!\n                                this.start_new_session(1);\n                            }\n                            else {\n                                // Not first session or continued session.\n                                const last_session = previous_sessions[previous_sessions.length - 1];\n                                const last_session_number = parseInt(last_session.session);\n\n                                if (last_session.event !== SessionEvent.SESSION_END) {\n                                    // Continue session\n                                    this.continue_session(last_session_number);\n                                }\n                                else {\n                                    // PILOT: In the pilot we have a single session (change to: === 2 for two sessions)\n                                    // Last session ended. \n                                    if (last_session_number === 1) {\n                                        this.setState({\n                                            error: texts[this.data.language].error_2nd_session_over,\n                                            loading: false\n                                        });\n                                    }\n                                    else {\n                                        // Second session\n                                        this.start_new_session(2);\n                                    }\n                                }\n                            }\n                        })\n                        .catch(err => {\n                            this.setState({ error: texts[this.data.language].error_no_connection + \" (\" + err + \").\" });\n                        });\n                }\n            });\n    }\n\n    start_new_session = (number) => {\n        console.log(\"Start new session:\", number);\n        this.data.session = number;\n\n        const start_session = () => {\n            console.log(\"Clearing local storage\");\n            ls.clear();\n            ls.set(\"data\", this.data);\n\n            if (number === 2 && this.state.step === this.steps.SUBJECT_DATA) {\n                this.nextStep();\n            }\n            this.load_exp1_recordings()\n                .then(() => {\n                    ls.set(\"exp1_recordings\", this.exp1_recordings);\n                    this.setState({ loading: false });\n                });\n        };\n\n        writeSessionEvent(this.conn, this.data, SessionEvent.SESSION_START);\n        if (number === 1) {\n            this.generate_subject_settings()\n                .then(() => {\n                    this.setState({ loading: false });\n                    start_session();\n                });\n        }\n        else {\n\n            this.load_subject_settings()\n                .then(start_session);\n        }\n    }\n\n    continue_session = (number) => {\n        console.log(\"Continue session:\", number);\n        const cont_data = ls.get(\"data\");\n        if (cont_data && cont_data.id === this.data.id) {\n            this.data = cont_data;\n            writeSessionEvent(this.conn, this.data, SessionEvent.SESSION_CONTINUED);\n            this.load_subject_settings()\n                .then(() => this.setState({ loading: false }));\n\n            const exp1_recordings = ls.get(\"exp1_recordings\");\n            if (exp1_recordings) {\n                this.exp1_recordings = exp1_recordings;\n            }\n            else {\n                this.load_exp1_recordings();\n            }\n\n            const cont_step = ls.get(\"step\");\n            if (cont_step) {\n                if (cont_step === this.steps.SUBJECT_DATA && number === 2) {\n                    this.setStep(cont_step + 1);\n                }\n                else {\n                    this.setStep(cont_step);\n                }\n            }\n        }\n        else {\n            this.start_new_session(number);\n        }\n    }\n\n    generate_subject_settings = () => {\n        return gs.read(this.conn, \"Subjects\", \"A2:I10000\")\n            .then(res => res.json())\n            .then(subjects_sheet => {\n                if (!subjects_sheet.values) {\n                    // first subject\n                    this.data.picture_samples_order = 0;\n                    this.data.picture_variant = 1;\n                    this.data.left_picture = 0;\n\n                    const exp1_subjects = shuffleArray([0, 1, 2, 3, 4, 5, 6, 7]);\n                    this.data.subject_Mu_E = exp1_subjects[0];\n                    this.data.subject_Mu_H = exp1_subjects[1];\n                    this.data.subject_Sp_E = exp1_subjects[2];\n                    this.data.subject_Sp_H = exp1_subjects[3];\n                }\n                else {\n                    const prev_settings = subjects_sheet.values;\n                    const prev_group_settings = prev_settings.filter(r => r[1] === this.data.group);\n\n                    // Picture samples order\n                    const prev_picture_samples = prev_settings.map(r => r[2]);\n                    this.data.picture_samples_order = counterbalance(6, prev_picture_samples);\n\n                    // Picture variant\n                    if (prev_group_settings.length === 0) {\n                        this.data.picture_variant = 1;\n                    }\n                    else {\n                        // PILOT: we always use variant 1\n                        // const prev_group_variants = prev_group_settings.map(r => r[3]);\n                        // let set1_count = 0;\n                        // for (let v of prev_group_variants) {\n                        //     if (v === \"1\")\n                        //         set1_count += 1;\n                        // }\n                        // const set2_count = prev_group_variants.length - set1_count;\n                        this.data.picture_variant = 1 // set1_count > set2_count ? 2 : 1;\n                    }\n\n                    // Picture order in a single trial\n                    const prev_left_picture = prev_settings.map(r => r[4]);\n                    this.data.left_picture = counterbalance(2, prev_left_picture);\n\n                    // Exp1 participant per block\n                    if (prev_group_settings.length === 0) {\n                        const exp1_subjects = shuffleArray([0, 1, 2, 3, 4, 5, 6, 7]);\n                        this.data.subject_Mu_E = exp1_subjects[0];\n                        this.data.subject_Mu_H = exp1_subjects[1];\n                        this.data.subject_Sp_E = exp1_subjects[2];\n                        this.data.subject_Sp_H = exp1_subjects[3];\n                    }\n                    else {\n                        const prev_subject_Mu_E = prev_group_settings.map(r => r[5]);\n                        const prev_subject_Mu_H = prev_group_settings.map(r => r[6]);\n                        const prev_subject_Sp_E = prev_group_settings.map(r => r[7]);\n                        const prev_subject_Sp_H = prev_group_settings.map(r => r[8]);\n\n                        this.data.subject_Mu_E = counterbalance(8, prev_subject_Mu_E);\n                        this.data.subject_Mu_H = counterbalance(8, prev_subject_Mu_H);\n                        this.data.subject_Sp_E = counterbalance(8, prev_subject_Sp_E);\n                        this.data.subject_Sp_H = counterbalance(8, prev_subject_Sp_H);\n                    }\n                }\n                // NOTE: Use blocks(this.data) for the full experiment\n                this.data.blocks = pilot_blocks(this.data);\n\n                const subject_row = Object.assign({}, this.data);\n                subject_row.blocks = JSON.stringify(subject_row.blocks);\n                return gs.write(this.conn, \"Subjects\", subject_row);\n            });\n    };\n\n    load_subject_settings = () => {\n        return gs.read(this.conn, \"Subjects\", \"A2:J10000\")\n            .then(res => res.json())\n            .then(subjects_sheet => {\n                if (!subjects_sheet.values) {\n                    this.setState({ error: texts[this.data.language].error_no_subject_settings + this.data.id });\n                }\n                else {\n                    // find last settings row for participant id\n                    const rows = subjects_sheet.values.filter(row => row[0] === this.data.id);\n                    if (rows.length === 0) {\n                        this.setState({ error: texts[this.data.language].error_no_subject_settings + this.data.id });\n                    }\n                    else {\n                        const settings_row = rows[rows.length - 1];\n                        this.data.group = settings_row[1];\n                        this.data.picture_samples_order = settings_row[2];\n                        this.data.picture_variant = settings_row[3];\n                        this.data.left_picture = settings_row[4];\n                        this.data.subject_Mu_E = settings_row[5];\n                        this.data.subject_Mu_H = settings_row[6];\n                        this.data.subject_Sp_E = settings_row[7];\n                        this.data.subject_Sp_H = settings_row[8];\n                        this.data.blocks = JSON.parse(settings_row[9]);\n                    }\n                }\n            });\n    };\n\n    save_data = () => {\n\n        this.data.end_time = new Date().toString();\n        this.data.trials.forEach(t => {\n            t.id = this.data.id;\n            t.session = this.data.session;\n            t.start_time = this.data.start_time;\n            t.end_time = this.data.end_time;\n            if (this.data.session === 1) {\n                t.gender = this.data.gender;\n                t.age = this.data.age;\n                t.musical_instrument = this.data.musical_instrument;\n                t.music_theory = this.data.music_theory;\n                t.activity = this.data.activity;\n                t.activity_specify = this.data.activity_specify;\n                t.acting = this.data.acting;\n                t.strategy = this.data.strategy;\n                t.relationships = this.data.relationships;\n                t.feedback = this.data.feedback;\n            }\n        });\n        console.log(this.data);\n\n        const that = this;\n        gs.write(this.conn, this.data.id, this.data.trials)\n            .then(res => {\n                that.setState({ done_saving: true });\n                writeSessionEvent(this.conn, this.data, SessionEvent.SESSION_END);\n            })\n            .catch(this.show_data_save_error);\n\n    }\n\n    render() {\n        const { step, loading, error } = this.state;\n\n        if (error) {\n            return <ErrorScreen error={error} language={this.data.language} />;\n        }\n        else if (loading) {\n            return <LoadingScreen language={this.data.language} />;\n        }\n        else {\n            switch (step) {\n                case this.steps.LOGIN:\n                    return <LoginScreen next={this.nextStep} data={this.data} key={step} />;\n                case this.steps.SUBJECT_DATA:\n                    return <SubjectDataScreen next={this.nextStep} data={this.data} key={step} language={this.data.language} />;\n                case this.steps.INTRO:\n                    return <InfoScreen next={this.nextStep} rtl={this.data.language === \"hebrew\"}\n                        info={texts[this.data.language].introduction}\n                        continue_label={texts[this.data.language].continue_label}\n                        key={step} />;\n                case this.steps.PICTURE_SAMPLES:\n                    return <PictureSamplesScreen\n                        language={this.data.language}\n                        next={this.nextStep}\n                        semantic_fields_permutation={this.data.picture_samples_order}\n                        picture_variant={this.data.picture_variant}\n                        picture_orientation={randomElement(['Right', 'Left'])}\n                        key={step} />;\n                case this.steps.EXPERIMENT_BLOCKS:\n                    return <Experiment next={this.nextStep}\n                        data={this.data}\n                        exp1_recordings={this.exp1_recordings}\n                        key={step} />;\n                case this.steps.FINAL_QUESTIONS:\n                    return <FinalQuestionsScreen next={this.nextStep} data={this.data} />;\n                case this.steps.FINISH:\n                    return <FinishScreen done_saving={this.state.done_saving} key={step} language={this.data.language} />;\n                default:\n                    return null;\n            }\n        }\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}